/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const ListDialingPermissionsHrsPrefixesServerList = [
  "https://voice.twilio.com",
] as const;

export type ListDialingPermissionsHrsPrefixesRequest = {
  /**
   * The [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) to identify the country permissions from which high-risk special service number prefixes are fetched
   */
  isoCode: string;
  /**
   * How many resources to return in each list page. The default is 50, and the maximum is 1000.
   */
  pageSize?: number | undefined;
  /**
   * The page index. This value is simply for client state.
   */
  page?: number | undefined;
  /**
   * The page token. This is provided by the API.
   */
  pageToken?: string | undefined;
};

export type ListDialingPermissionsHrsPrefixesMeta = {
  firstPageUrl?: string | undefined;
  key?: string | undefined;
  nextPageUrl?: string | null | undefined;
  page?: number | undefined;
  pageSize?: number | undefined;
  previousPageUrl?: string | null | undefined;
  url?: string | undefined;
};

/**
 * OK
 */
export type ListDialingPermissionsHrsPrefixesListDialingPermissionsHrsPrefixesResponse =
  {
    content?:
      | Array<
        components.VoiceV1DialingPermissionsDialingPermissionsCountryDialingPermissionsHrsPrefixes
      >
      | undefined;
    meta?: ListDialingPermissionsHrsPrefixesMeta | undefined;
  };

export type ListDialingPermissionsHrsPrefixesResponse = {
  headers: { [k: string]: Array<string> };
  result:
    ListDialingPermissionsHrsPrefixesListDialingPermissionsHrsPrefixesResponse;
};

/** @internal */
export const ListDialingPermissionsHrsPrefixesRequest$inboundSchema: z.ZodType<
  ListDialingPermissionsHrsPrefixesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  IsoCode: z.string(),
  PageSize: z.number().int().optional(),
  Page: z.number().int().optional(),
  PageToken: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "IsoCode": "isoCode",
    "PageSize": "pageSize",
    "Page": "page",
    "PageToken": "pageToken",
  });
});

/** @internal */
export type ListDialingPermissionsHrsPrefixesRequest$Outbound = {
  IsoCode: string;
  PageSize?: number | undefined;
  Page?: number | undefined;
  PageToken?: string | undefined;
};

/** @internal */
export const ListDialingPermissionsHrsPrefixesRequest$outboundSchema: z.ZodType<
  ListDialingPermissionsHrsPrefixesRequest$Outbound,
  z.ZodTypeDef,
  ListDialingPermissionsHrsPrefixesRequest
> = z.object({
  isoCode: z.string(),
  pageSize: z.number().int().optional(),
  page: z.number().int().optional(),
  pageToken: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    isoCode: "IsoCode",
    pageSize: "PageSize",
    page: "Page",
    pageToken: "PageToken",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListDialingPermissionsHrsPrefixesRequest$ {
  /** @deprecated use `ListDialingPermissionsHrsPrefixesRequest$inboundSchema` instead. */
  export const inboundSchema =
    ListDialingPermissionsHrsPrefixesRequest$inboundSchema;
  /** @deprecated use `ListDialingPermissionsHrsPrefixesRequest$outboundSchema` instead. */
  export const outboundSchema =
    ListDialingPermissionsHrsPrefixesRequest$outboundSchema;
  /** @deprecated use `ListDialingPermissionsHrsPrefixesRequest$Outbound` instead. */
  export type Outbound = ListDialingPermissionsHrsPrefixesRequest$Outbound;
}

export function listDialingPermissionsHrsPrefixesRequestToJSON(
  listDialingPermissionsHrsPrefixesRequest:
    ListDialingPermissionsHrsPrefixesRequest,
): string {
  return JSON.stringify(
    ListDialingPermissionsHrsPrefixesRequest$outboundSchema.parse(
      listDialingPermissionsHrsPrefixesRequest,
    ),
  );
}

export function listDialingPermissionsHrsPrefixesRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  ListDialingPermissionsHrsPrefixesRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ListDialingPermissionsHrsPrefixesRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ListDialingPermissionsHrsPrefixesRequest' from JSON`,
  );
}

/** @internal */
export const ListDialingPermissionsHrsPrefixesMeta$inboundSchema: z.ZodType<
  ListDialingPermissionsHrsPrefixesMeta,
  z.ZodTypeDef,
  unknown
> = z.object({
  first_page_url: z.string().optional(),
  key: z.string().optional(),
  next_page_url: z.nullable(z.string()).optional(),
  page: z.number().int().optional(),
  page_size: z.number().int().optional(),
  previous_page_url: z.nullable(z.string()).optional(),
  url: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "first_page_url": "firstPageUrl",
    "next_page_url": "nextPageUrl",
    "page_size": "pageSize",
    "previous_page_url": "previousPageUrl",
  });
});

/** @internal */
export type ListDialingPermissionsHrsPrefixesMeta$Outbound = {
  first_page_url?: string | undefined;
  key?: string | undefined;
  next_page_url?: string | null | undefined;
  page?: number | undefined;
  page_size?: number | undefined;
  previous_page_url?: string | null | undefined;
  url?: string | undefined;
};

/** @internal */
export const ListDialingPermissionsHrsPrefixesMeta$outboundSchema: z.ZodType<
  ListDialingPermissionsHrsPrefixesMeta$Outbound,
  z.ZodTypeDef,
  ListDialingPermissionsHrsPrefixesMeta
> = z.object({
  firstPageUrl: z.string().optional(),
  key: z.string().optional(),
  nextPageUrl: z.nullable(z.string()).optional(),
  page: z.number().int().optional(),
  pageSize: z.number().int().optional(),
  previousPageUrl: z.nullable(z.string()).optional(),
  url: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    firstPageUrl: "first_page_url",
    nextPageUrl: "next_page_url",
    pageSize: "page_size",
    previousPageUrl: "previous_page_url",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListDialingPermissionsHrsPrefixesMeta$ {
  /** @deprecated use `ListDialingPermissionsHrsPrefixesMeta$inboundSchema` instead. */
  export const inboundSchema =
    ListDialingPermissionsHrsPrefixesMeta$inboundSchema;
  /** @deprecated use `ListDialingPermissionsHrsPrefixesMeta$outboundSchema` instead. */
  export const outboundSchema =
    ListDialingPermissionsHrsPrefixesMeta$outboundSchema;
  /** @deprecated use `ListDialingPermissionsHrsPrefixesMeta$Outbound` instead. */
  export type Outbound = ListDialingPermissionsHrsPrefixesMeta$Outbound;
}

export function listDialingPermissionsHrsPrefixesMetaToJSON(
  listDialingPermissionsHrsPrefixesMeta: ListDialingPermissionsHrsPrefixesMeta,
): string {
  return JSON.stringify(
    ListDialingPermissionsHrsPrefixesMeta$outboundSchema.parse(
      listDialingPermissionsHrsPrefixesMeta,
    ),
  );
}

export function listDialingPermissionsHrsPrefixesMetaFromJSON(
  jsonString: string,
): SafeParseResult<ListDialingPermissionsHrsPrefixesMeta, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ListDialingPermissionsHrsPrefixesMeta$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListDialingPermissionsHrsPrefixesMeta' from JSON`,
  );
}

/** @internal */
export const ListDialingPermissionsHrsPrefixesListDialingPermissionsHrsPrefixesResponse$inboundSchema:
  z.ZodType<
    ListDialingPermissionsHrsPrefixesListDialingPermissionsHrsPrefixesResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    content: z.array(
      components
        .VoiceV1DialingPermissionsDialingPermissionsCountryDialingPermissionsHrsPrefixes$inboundSchema,
    ).optional(),
    meta: z.lazy(() => ListDialingPermissionsHrsPrefixesMeta$inboundSchema)
      .optional(),
  });

/** @internal */
export type ListDialingPermissionsHrsPrefixesListDialingPermissionsHrsPrefixesResponse$Outbound =
  {
    content?:
      | Array<
        components.VoiceV1DialingPermissionsDialingPermissionsCountryDialingPermissionsHrsPrefixes$Outbound
      >
      | undefined;
    meta?: ListDialingPermissionsHrsPrefixesMeta$Outbound | undefined;
  };

/** @internal */
export const ListDialingPermissionsHrsPrefixesListDialingPermissionsHrsPrefixesResponse$outboundSchema:
  z.ZodType<
    ListDialingPermissionsHrsPrefixesListDialingPermissionsHrsPrefixesResponse$Outbound,
    z.ZodTypeDef,
    ListDialingPermissionsHrsPrefixesListDialingPermissionsHrsPrefixesResponse
  > = z.object({
    content: z.array(
      components
        .VoiceV1DialingPermissionsDialingPermissionsCountryDialingPermissionsHrsPrefixes$outboundSchema,
    ).optional(),
    meta: z.lazy(() => ListDialingPermissionsHrsPrefixesMeta$outboundSchema)
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListDialingPermissionsHrsPrefixesListDialingPermissionsHrsPrefixesResponse$ {
  /** @deprecated use `ListDialingPermissionsHrsPrefixesListDialingPermissionsHrsPrefixesResponse$inboundSchema` instead. */
  export const inboundSchema =
    ListDialingPermissionsHrsPrefixesListDialingPermissionsHrsPrefixesResponse$inboundSchema;
  /** @deprecated use `ListDialingPermissionsHrsPrefixesListDialingPermissionsHrsPrefixesResponse$outboundSchema` instead. */
  export const outboundSchema =
    ListDialingPermissionsHrsPrefixesListDialingPermissionsHrsPrefixesResponse$outboundSchema;
  /** @deprecated use `ListDialingPermissionsHrsPrefixesListDialingPermissionsHrsPrefixesResponse$Outbound` instead. */
  export type Outbound =
    ListDialingPermissionsHrsPrefixesListDialingPermissionsHrsPrefixesResponse$Outbound;
}

export function listDialingPermissionsHrsPrefixesListDialingPermissionsHrsPrefixesResponseToJSON(
  listDialingPermissionsHrsPrefixesListDialingPermissionsHrsPrefixesResponse:
    ListDialingPermissionsHrsPrefixesListDialingPermissionsHrsPrefixesResponse,
): string {
  return JSON.stringify(
    ListDialingPermissionsHrsPrefixesListDialingPermissionsHrsPrefixesResponse$outboundSchema
      .parse(
        listDialingPermissionsHrsPrefixesListDialingPermissionsHrsPrefixesResponse,
      ),
  );
}

export function listDialingPermissionsHrsPrefixesListDialingPermissionsHrsPrefixesResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  ListDialingPermissionsHrsPrefixesListDialingPermissionsHrsPrefixesResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ListDialingPermissionsHrsPrefixesListDialingPermissionsHrsPrefixesResponse$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'ListDialingPermissionsHrsPrefixesListDialingPermissionsHrsPrefixesResponse' from JSON`,
  );
}

/** @internal */
export const ListDialingPermissionsHrsPrefixesResponse$inboundSchema: z.ZodType<
  ListDialingPermissionsHrsPrefixesResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Headers: z.record(z.array(z.string())),
  Result: z.lazy(() =>
    ListDialingPermissionsHrsPrefixesListDialingPermissionsHrsPrefixesResponse$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "Headers": "headers",
    "Result": "result",
  });
});

/** @internal */
export type ListDialingPermissionsHrsPrefixesResponse$Outbound = {
  Headers: { [k: string]: Array<string> };
  Result:
    ListDialingPermissionsHrsPrefixesListDialingPermissionsHrsPrefixesResponse$Outbound;
};

/** @internal */
export const ListDialingPermissionsHrsPrefixesResponse$outboundSchema:
  z.ZodType<
    ListDialingPermissionsHrsPrefixesResponse$Outbound,
    z.ZodTypeDef,
    ListDialingPermissionsHrsPrefixesResponse
  > = z.object({
    headers: z.record(z.array(z.string())),
    result: z.lazy(() =>
      ListDialingPermissionsHrsPrefixesListDialingPermissionsHrsPrefixesResponse$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      headers: "Headers",
      result: "Result",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListDialingPermissionsHrsPrefixesResponse$ {
  /** @deprecated use `ListDialingPermissionsHrsPrefixesResponse$inboundSchema` instead. */
  export const inboundSchema =
    ListDialingPermissionsHrsPrefixesResponse$inboundSchema;
  /** @deprecated use `ListDialingPermissionsHrsPrefixesResponse$outboundSchema` instead. */
  export const outboundSchema =
    ListDialingPermissionsHrsPrefixesResponse$outboundSchema;
  /** @deprecated use `ListDialingPermissionsHrsPrefixesResponse$Outbound` instead. */
  export type Outbound = ListDialingPermissionsHrsPrefixesResponse$Outbound;
}

export function listDialingPermissionsHrsPrefixesResponseToJSON(
  listDialingPermissionsHrsPrefixesResponse:
    ListDialingPermissionsHrsPrefixesResponse,
): string {
  return JSON.stringify(
    ListDialingPermissionsHrsPrefixesResponse$outboundSchema.parse(
      listDialingPermissionsHrsPrefixesResponse,
    ),
  );
}

export function listDialingPermissionsHrsPrefixesResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  ListDialingPermissionsHrsPrefixesResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ListDialingPermissionsHrsPrefixesResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ListDialingPermissionsHrsPrefixesResponse' from JSON`,
  );
}
