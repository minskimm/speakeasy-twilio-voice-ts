/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const ListDialingPermissionsCountryServerList = [
  "https://voice.twilio.com",
] as const;

export type ListDialingPermissionsCountryRequest = {
  /**
   * Filter to retrieve the country permissions by specifying the [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
   */
  isoCode?: string | undefined;
  /**
   * Filter to retrieve the country permissions by specifying the continent
   */
  continent?: string | undefined;
  /**
   * Filter the results by specified [country codes](https://www.itu.int/itudoc/itu-t/ob-lists/icc/e164_763.html)
   */
  countryCode?: string | undefined;
  /**
   * Filter to retrieve the country permissions with dialing to low-risk numbers enabled. Can be: `true` or `false`.
   */
  lowRiskNumbersEnabled?: boolean | undefined;
  /**
   * Filter to retrieve the country permissions with dialing to high-risk special service numbers enabled. Can be: `true` or `false`
   */
  highRiskSpecialNumbersEnabled?: boolean | undefined;
  /**
   * Filter to retrieve the country permissions with dialing to high-risk [toll fraud](https://www.twilio.com/blog/how-to-protect-your-account-from-toll-fraud-with-voice-dialing-geo-permissions-html) numbers enabled. Can be: `true` or `false`.
   */
  highRiskTollfraudNumbersEnabled?: boolean | undefined;
  /**
   * How many resources to return in each list page. The default is 50, and the maximum is 1000.
   */
  pageSize?: number | undefined;
  /**
   * The page index. This value is simply for client state.
   */
  page?: number | undefined;
  /**
   * The page token. This is provided by the API.
   */
  pageToken?: string | undefined;
};

export type ListDialingPermissionsCountryMeta = {
  firstPageUrl?: string | undefined;
  key?: string | undefined;
  nextPageUrl?: string | null | undefined;
  page?: number | undefined;
  pageSize?: number | undefined;
  previousPageUrl?: string | null | undefined;
  url?: string | undefined;
};

/**
 * OK
 */
export type ListDialingPermissionsCountryListDialingPermissionsCountryResponse =
  {
    content?:
      | Array<components.VoiceV1DialingPermissionsDialingPermissionsCountry>
      | undefined;
    meta?: ListDialingPermissionsCountryMeta | undefined;
  };

export type ListDialingPermissionsCountryResponse = {
  headers: { [k: string]: Array<string> };
  result: ListDialingPermissionsCountryListDialingPermissionsCountryResponse;
};

/** @internal */
export const ListDialingPermissionsCountryRequest$inboundSchema: z.ZodType<
  ListDialingPermissionsCountryRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  IsoCode: z.string().optional(),
  Continent: z.string().optional(),
  CountryCode: z.string().optional(),
  LowRiskNumbersEnabled: z.boolean().optional(),
  HighRiskSpecialNumbersEnabled: z.boolean().optional(),
  HighRiskTollfraudNumbersEnabled: z.boolean().optional(),
  PageSize: z.number().int().optional(),
  Page: z.number().int().optional(),
  PageToken: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "IsoCode": "isoCode",
    "Continent": "continent",
    "CountryCode": "countryCode",
    "LowRiskNumbersEnabled": "lowRiskNumbersEnabled",
    "HighRiskSpecialNumbersEnabled": "highRiskSpecialNumbersEnabled",
    "HighRiskTollfraudNumbersEnabled": "highRiskTollfraudNumbersEnabled",
    "PageSize": "pageSize",
    "Page": "page",
    "PageToken": "pageToken",
  });
});

/** @internal */
export type ListDialingPermissionsCountryRequest$Outbound = {
  IsoCode?: string | undefined;
  Continent?: string | undefined;
  CountryCode?: string | undefined;
  LowRiskNumbersEnabled?: boolean | undefined;
  HighRiskSpecialNumbersEnabled?: boolean | undefined;
  HighRiskTollfraudNumbersEnabled?: boolean | undefined;
  PageSize?: number | undefined;
  Page?: number | undefined;
  PageToken?: string | undefined;
};

/** @internal */
export const ListDialingPermissionsCountryRequest$outboundSchema: z.ZodType<
  ListDialingPermissionsCountryRequest$Outbound,
  z.ZodTypeDef,
  ListDialingPermissionsCountryRequest
> = z.object({
  isoCode: z.string().optional(),
  continent: z.string().optional(),
  countryCode: z.string().optional(),
  lowRiskNumbersEnabled: z.boolean().optional(),
  highRiskSpecialNumbersEnabled: z.boolean().optional(),
  highRiskTollfraudNumbersEnabled: z.boolean().optional(),
  pageSize: z.number().int().optional(),
  page: z.number().int().optional(),
  pageToken: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    isoCode: "IsoCode",
    continent: "Continent",
    countryCode: "CountryCode",
    lowRiskNumbersEnabled: "LowRiskNumbersEnabled",
    highRiskSpecialNumbersEnabled: "HighRiskSpecialNumbersEnabled",
    highRiskTollfraudNumbersEnabled: "HighRiskTollfraudNumbersEnabled",
    pageSize: "PageSize",
    page: "Page",
    pageToken: "PageToken",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListDialingPermissionsCountryRequest$ {
  /** @deprecated use `ListDialingPermissionsCountryRequest$inboundSchema` instead. */
  export const inboundSchema =
    ListDialingPermissionsCountryRequest$inboundSchema;
  /** @deprecated use `ListDialingPermissionsCountryRequest$outboundSchema` instead. */
  export const outboundSchema =
    ListDialingPermissionsCountryRequest$outboundSchema;
  /** @deprecated use `ListDialingPermissionsCountryRequest$Outbound` instead. */
  export type Outbound = ListDialingPermissionsCountryRequest$Outbound;
}

export function listDialingPermissionsCountryRequestToJSON(
  listDialingPermissionsCountryRequest: ListDialingPermissionsCountryRequest,
): string {
  return JSON.stringify(
    ListDialingPermissionsCountryRequest$outboundSchema.parse(
      listDialingPermissionsCountryRequest,
    ),
  );
}

export function listDialingPermissionsCountryRequestFromJSON(
  jsonString: string,
): SafeParseResult<ListDialingPermissionsCountryRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ListDialingPermissionsCountryRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListDialingPermissionsCountryRequest' from JSON`,
  );
}

/** @internal */
export const ListDialingPermissionsCountryMeta$inboundSchema: z.ZodType<
  ListDialingPermissionsCountryMeta,
  z.ZodTypeDef,
  unknown
> = z.object({
  first_page_url: z.string().optional(),
  key: z.string().optional(),
  next_page_url: z.nullable(z.string()).optional(),
  page: z.number().int().optional(),
  page_size: z.number().int().optional(),
  previous_page_url: z.nullable(z.string()).optional(),
  url: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "first_page_url": "firstPageUrl",
    "next_page_url": "nextPageUrl",
    "page_size": "pageSize",
    "previous_page_url": "previousPageUrl",
  });
});

/** @internal */
export type ListDialingPermissionsCountryMeta$Outbound = {
  first_page_url?: string | undefined;
  key?: string | undefined;
  next_page_url?: string | null | undefined;
  page?: number | undefined;
  page_size?: number | undefined;
  previous_page_url?: string | null | undefined;
  url?: string | undefined;
};

/** @internal */
export const ListDialingPermissionsCountryMeta$outboundSchema: z.ZodType<
  ListDialingPermissionsCountryMeta$Outbound,
  z.ZodTypeDef,
  ListDialingPermissionsCountryMeta
> = z.object({
  firstPageUrl: z.string().optional(),
  key: z.string().optional(),
  nextPageUrl: z.nullable(z.string()).optional(),
  page: z.number().int().optional(),
  pageSize: z.number().int().optional(),
  previousPageUrl: z.nullable(z.string()).optional(),
  url: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    firstPageUrl: "first_page_url",
    nextPageUrl: "next_page_url",
    pageSize: "page_size",
    previousPageUrl: "previous_page_url",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListDialingPermissionsCountryMeta$ {
  /** @deprecated use `ListDialingPermissionsCountryMeta$inboundSchema` instead. */
  export const inboundSchema = ListDialingPermissionsCountryMeta$inboundSchema;
  /** @deprecated use `ListDialingPermissionsCountryMeta$outboundSchema` instead. */
  export const outboundSchema =
    ListDialingPermissionsCountryMeta$outboundSchema;
  /** @deprecated use `ListDialingPermissionsCountryMeta$Outbound` instead. */
  export type Outbound = ListDialingPermissionsCountryMeta$Outbound;
}

export function listDialingPermissionsCountryMetaToJSON(
  listDialingPermissionsCountryMeta: ListDialingPermissionsCountryMeta,
): string {
  return JSON.stringify(
    ListDialingPermissionsCountryMeta$outboundSchema.parse(
      listDialingPermissionsCountryMeta,
    ),
  );
}

export function listDialingPermissionsCountryMetaFromJSON(
  jsonString: string,
): SafeParseResult<ListDialingPermissionsCountryMeta, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListDialingPermissionsCountryMeta$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListDialingPermissionsCountryMeta' from JSON`,
  );
}

/** @internal */
export const ListDialingPermissionsCountryListDialingPermissionsCountryResponse$inboundSchema:
  z.ZodType<
    ListDialingPermissionsCountryListDialingPermissionsCountryResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    content: z.array(
      components
        .VoiceV1DialingPermissionsDialingPermissionsCountry$inboundSchema,
    ).optional(),
    meta: z.lazy(() => ListDialingPermissionsCountryMeta$inboundSchema)
      .optional(),
  });

/** @internal */
export type ListDialingPermissionsCountryListDialingPermissionsCountryResponse$Outbound =
  {
    content?:
      | Array<
        components.VoiceV1DialingPermissionsDialingPermissionsCountry$Outbound
      >
      | undefined;
    meta?: ListDialingPermissionsCountryMeta$Outbound | undefined;
  };

/** @internal */
export const ListDialingPermissionsCountryListDialingPermissionsCountryResponse$outboundSchema:
  z.ZodType<
    ListDialingPermissionsCountryListDialingPermissionsCountryResponse$Outbound,
    z.ZodTypeDef,
    ListDialingPermissionsCountryListDialingPermissionsCountryResponse
  > = z.object({
    content: z.array(
      components
        .VoiceV1DialingPermissionsDialingPermissionsCountry$outboundSchema,
    ).optional(),
    meta: z.lazy(() => ListDialingPermissionsCountryMeta$outboundSchema)
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListDialingPermissionsCountryListDialingPermissionsCountryResponse$ {
  /** @deprecated use `ListDialingPermissionsCountryListDialingPermissionsCountryResponse$inboundSchema` instead. */
  export const inboundSchema =
    ListDialingPermissionsCountryListDialingPermissionsCountryResponse$inboundSchema;
  /** @deprecated use `ListDialingPermissionsCountryListDialingPermissionsCountryResponse$outboundSchema` instead. */
  export const outboundSchema =
    ListDialingPermissionsCountryListDialingPermissionsCountryResponse$outboundSchema;
  /** @deprecated use `ListDialingPermissionsCountryListDialingPermissionsCountryResponse$Outbound` instead. */
  export type Outbound =
    ListDialingPermissionsCountryListDialingPermissionsCountryResponse$Outbound;
}

export function listDialingPermissionsCountryListDialingPermissionsCountryResponseToJSON(
  listDialingPermissionsCountryListDialingPermissionsCountryResponse:
    ListDialingPermissionsCountryListDialingPermissionsCountryResponse,
): string {
  return JSON.stringify(
    ListDialingPermissionsCountryListDialingPermissionsCountryResponse$outboundSchema
      .parse(
        listDialingPermissionsCountryListDialingPermissionsCountryResponse,
      ),
  );
}

export function listDialingPermissionsCountryListDialingPermissionsCountryResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  ListDialingPermissionsCountryListDialingPermissionsCountryResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ListDialingPermissionsCountryListDialingPermissionsCountryResponse$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'ListDialingPermissionsCountryListDialingPermissionsCountryResponse' from JSON`,
  );
}

/** @internal */
export const ListDialingPermissionsCountryResponse$inboundSchema: z.ZodType<
  ListDialingPermissionsCountryResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Headers: z.record(z.array(z.string())),
  Result: z.lazy(() =>
    ListDialingPermissionsCountryListDialingPermissionsCountryResponse$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "Headers": "headers",
    "Result": "result",
  });
});

/** @internal */
export type ListDialingPermissionsCountryResponse$Outbound = {
  Headers: { [k: string]: Array<string> };
  Result:
    ListDialingPermissionsCountryListDialingPermissionsCountryResponse$Outbound;
};

/** @internal */
export const ListDialingPermissionsCountryResponse$outboundSchema: z.ZodType<
  ListDialingPermissionsCountryResponse$Outbound,
  z.ZodTypeDef,
  ListDialingPermissionsCountryResponse
> = z.object({
  headers: z.record(z.array(z.string())),
  result: z.lazy(() =>
    ListDialingPermissionsCountryListDialingPermissionsCountryResponse$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    headers: "Headers",
    result: "Result",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListDialingPermissionsCountryResponse$ {
  /** @deprecated use `ListDialingPermissionsCountryResponse$inboundSchema` instead. */
  export const inboundSchema =
    ListDialingPermissionsCountryResponse$inboundSchema;
  /** @deprecated use `ListDialingPermissionsCountryResponse$outboundSchema` instead. */
  export const outboundSchema =
    ListDialingPermissionsCountryResponse$outboundSchema;
  /** @deprecated use `ListDialingPermissionsCountryResponse$Outbound` instead. */
  export type Outbound = ListDialingPermissionsCountryResponse$Outbound;
}

export function listDialingPermissionsCountryResponseToJSON(
  listDialingPermissionsCountryResponse: ListDialingPermissionsCountryResponse,
): string {
  return JSON.stringify(
    ListDialingPermissionsCountryResponse$outboundSchema.parse(
      listDialingPermissionsCountryResponse,
    ),
  );
}

export function listDialingPermissionsCountryResponseFromJSON(
  jsonString: string,
): SafeParseResult<ListDialingPermissionsCountryResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ListDialingPermissionsCountryResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListDialingPermissionsCountryResponse' from JSON`,
  );
}
