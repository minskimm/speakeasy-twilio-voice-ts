/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type VoiceV1DialingPermissionsDialingPermissionsCountryBulkUpdate = {
  /**
   * The number of countries updated
   */
  updateCount?: number | undefined;
  /**
   * A bulk update request to change voice dialing country permissions stored as a URL-encoded, JSON array of update objects. For example : `[ { "iso_code": "GB", "low_risk_numbers_enabled": "true", "high_risk_special_numbers_enabled":"true", "high_risk_tollfraud_numbers_enabled": "false" } ]`
   */
  updateRequest?: string | null | undefined;
};

/** @internal */
export const VoiceV1DialingPermissionsDialingPermissionsCountryBulkUpdate$inboundSchema:
  z.ZodType<
    VoiceV1DialingPermissionsDialingPermissionsCountryBulkUpdate,
    z.ZodTypeDef,
    unknown
  > = z.object({
    update_count: z.number().int().default(0),
    update_request: z.nullable(z.string()).optional(),
  }).transform((v) => {
    return remap$(v, {
      "update_count": "updateCount",
      "update_request": "updateRequest",
    });
  });

/** @internal */
export type VoiceV1DialingPermissionsDialingPermissionsCountryBulkUpdate$Outbound =
  {
    update_count: number;
    update_request?: string | null | undefined;
  };

/** @internal */
export const VoiceV1DialingPermissionsDialingPermissionsCountryBulkUpdate$outboundSchema:
  z.ZodType<
    VoiceV1DialingPermissionsDialingPermissionsCountryBulkUpdate$Outbound,
    z.ZodTypeDef,
    VoiceV1DialingPermissionsDialingPermissionsCountryBulkUpdate
  > = z.object({
    updateCount: z.number().int().default(0),
    updateRequest: z.nullable(z.string()).optional(),
  }).transform((v) => {
    return remap$(v, {
      updateCount: "update_count",
      updateRequest: "update_request",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VoiceV1DialingPermissionsDialingPermissionsCountryBulkUpdate$ {
  /** @deprecated use `VoiceV1DialingPermissionsDialingPermissionsCountryBulkUpdate$inboundSchema` instead. */
  export const inboundSchema =
    VoiceV1DialingPermissionsDialingPermissionsCountryBulkUpdate$inboundSchema;
  /** @deprecated use `VoiceV1DialingPermissionsDialingPermissionsCountryBulkUpdate$outboundSchema` instead. */
  export const outboundSchema =
    VoiceV1DialingPermissionsDialingPermissionsCountryBulkUpdate$outboundSchema;
  /** @deprecated use `VoiceV1DialingPermissionsDialingPermissionsCountryBulkUpdate$Outbound` instead. */
  export type Outbound =
    VoiceV1DialingPermissionsDialingPermissionsCountryBulkUpdate$Outbound;
}

export function voiceV1DialingPermissionsDialingPermissionsCountryBulkUpdateToJSON(
  voiceV1DialingPermissionsDialingPermissionsCountryBulkUpdate:
    VoiceV1DialingPermissionsDialingPermissionsCountryBulkUpdate,
): string {
  return JSON.stringify(
    VoiceV1DialingPermissionsDialingPermissionsCountryBulkUpdate$outboundSchema
      .parse(voiceV1DialingPermissionsDialingPermissionsCountryBulkUpdate),
  );
}

export function voiceV1DialingPermissionsDialingPermissionsCountryBulkUpdateFromJSON(
  jsonString: string,
): SafeParseResult<
  VoiceV1DialingPermissionsDialingPermissionsCountryBulkUpdate,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      VoiceV1DialingPermissionsDialingPermissionsCountryBulkUpdate$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'VoiceV1DialingPermissionsDialingPermissionsCountryBulkUpdate' from JSON`,
  );
}
