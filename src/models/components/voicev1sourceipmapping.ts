/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type VoiceV1SourceIpMapping = {
  /**
   * The unique string that we created to identify the IP Record resource.
   */
  sid?: string | null | undefined;
  /**
   * The Twilio-provided string that uniquely identifies the IP Record resource to map from.
   */
  ipRecordSid?: string | null | undefined;
  /**
   * The SID of the SIP Domain that the IP Record is mapped to.
   */
  sipDomainSid?: string | null | undefined;
  /**
   * The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
   */
  dateCreated?: Date | null | undefined;
  /**
   * The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
   */
  dateUpdated?: Date | null | undefined;
  /**
   * The absolute URL of the resource.
   */
  url?: string | null | undefined;
};

/** @internal */
export const VoiceV1SourceIpMapping$inboundSchema: z.ZodType<
  VoiceV1SourceIpMapping,
  z.ZodTypeDef,
  unknown
> = z.object({
  sid: z.nullable(z.string()).optional(),
  ip_record_sid: z.nullable(z.string()).optional(),
  sip_domain_sid: z.nullable(z.string()).optional(),
  date_created: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  date_updated: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  url: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "ip_record_sid": "ipRecordSid",
    "sip_domain_sid": "sipDomainSid",
    "date_created": "dateCreated",
    "date_updated": "dateUpdated",
  });
});

/** @internal */
export type VoiceV1SourceIpMapping$Outbound = {
  sid?: string | null | undefined;
  ip_record_sid?: string | null | undefined;
  sip_domain_sid?: string | null | undefined;
  date_created?: string | null | undefined;
  date_updated?: string | null | undefined;
  url?: string | null | undefined;
};

/** @internal */
export const VoiceV1SourceIpMapping$outboundSchema: z.ZodType<
  VoiceV1SourceIpMapping$Outbound,
  z.ZodTypeDef,
  VoiceV1SourceIpMapping
> = z.object({
  sid: z.nullable(z.string()).optional(),
  ipRecordSid: z.nullable(z.string()).optional(),
  sipDomainSid: z.nullable(z.string()).optional(),
  dateCreated: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  dateUpdated: z.nullable(z.date().transform(v => v.toISOString())).optional(),
  url: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    ipRecordSid: "ip_record_sid",
    sipDomainSid: "sip_domain_sid",
    dateCreated: "date_created",
    dateUpdated: "date_updated",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VoiceV1SourceIpMapping$ {
  /** @deprecated use `VoiceV1SourceIpMapping$inboundSchema` instead. */
  export const inboundSchema = VoiceV1SourceIpMapping$inboundSchema;
  /** @deprecated use `VoiceV1SourceIpMapping$outboundSchema` instead. */
  export const outboundSchema = VoiceV1SourceIpMapping$outboundSchema;
  /** @deprecated use `VoiceV1SourceIpMapping$Outbound` instead. */
  export type Outbound = VoiceV1SourceIpMapping$Outbound;
}

export function voiceV1SourceIpMappingToJSON(
  voiceV1SourceIpMapping: VoiceV1SourceIpMapping,
): string {
  return JSON.stringify(
    VoiceV1SourceIpMapping$outboundSchema.parse(voiceV1SourceIpMapping),
  );
}

export function voiceV1SourceIpMappingFromJSON(
  jsonString: string,
): SafeParseResult<VoiceV1SourceIpMapping, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => VoiceV1SourceIpMapping$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'VoiceV1SourceIpMapping' from JSON`,
  );
}
