/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * A list of URLs related to this resource.
 */
export type VoiceV1DialingPermissionsDialingPermissionsCountryInstanceLinks =
  {};

export type VoiceV1DialingPermissionsDialingPermissionsCountryInstance = {
  /**
   * The [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
   */
  isoCode?: string | null | undefined;
  /**
   * The name of the country.
   */
  name?: string | null | undefined;
  /**
   * The name of the continent in which the country is located.
   */
  continent?: string | null | undefined;
  /**
   * The E.164 assigned [country codes(s)](https://www.itu.int/itudoc/itu-t/ob-lists/icc/e164_763.html)
   */
  countryCodes?: Array<string> | null | undefined;
  /**
   * Whether dialing to low-risk numbers is enabled.
   */
  lowRiskNumbersEnabled?: boolean | null | undefined;
  /**
   * Whether dialing to high-risk special services numbers is enabled. These prefixes include number ranges allocated by the country and include premium numbers, special services, shared cost, and others
   */
  highRiskSpecialNumbersEnabled?: boolean | null | undefined;
  /**
   * Whether dialing to high-risk [toll fraud](https://www.twilio.com/blog/how-to-protect-your-account-from-toll-fraud-with-voice-dialing-geo-permissions-html) numbers is enabled. These prefixes include narrow number ranges that have a high-risk of international revenue sharing fraud (IRSF) attacks, also known as [toll fraud](https://www.twilio.com/blog/how-to-protect-your-account-from-toll-fraud-with-voice-dialing-geo-permissions-html). These prefixes are collected from anti-fraud databases and verified by analyzing calls on our network. These prefixes are not available for download and are updated frequently
   */
  highRiskTollfraudNumbersEnabled?: boolean | null | undefined;
  /**
   * The absolute URL of this resource.
   */
  url?: string | null | undefined;
  /**
   * A list of URLs related to this resource.
   */
  links?:
    | VoiceV1DialingPermissionsDialingPermissionsCountryInstanceLinks
    | null
    | undefined;
};

/** @internal */
export const VoiceV1DialingPermissionsDialingPermissionsCountryInstanceLinks$inboundSchema:
  z.ZodType<
    VoiceV1DialingPermissionsDialingPermissionsCountryInstanceLinks,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type VoiceV1DialingPermissionsDialingPermissionsCountryInstanceLinks$Outbound =
  {};

/** @internal */
export const VoiceV1DialingPermissionsDialingPermissionsCountryInstanceLinks$outboundSchema:
  z.ZodType<
    VoiceV1DialingPermissionsDialingPermissionsCountryInstanceLinks$Outbound,
    z.ZodTypeDef,
    VoiceV1DialingPermissionsDialingPermissionsCountryInstanceLinks
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VoiceV1DialingPermissionsDialingPermissionsCountryInstanceLinks$ {
  /** @deprecated use `VoiceV1DialingPermissionsDialingPermissionsCountryInstanceLinks$inboundSchema` instead. */
  export const inboundSchema =
    VoiceV1DialingPermissionsDialingPermissionsCountryInstanceLinks$inboundSchema;
  /** @deprecated use `VoiceV1DialingPermissionsDialingPermissionsCountryInstanceLinks$outboundSchema` instead. */
  export const outboundSchema =
    VoiceV1DialingPermissionsDialingPermissionsCountryInstanceLinks$outboundSchema;
  /** @deprecated use `VoiceV1DialingPermissionsDialingPermissionsCountryInstanceLinks$Outbound` instead. */
  export type Outbound =
    VoiceV1DialingPermissionsDialingPermissionsCountryInstanceLinks$Outbound;
}

export function voiceV1DialingPermissionsDialingPermissionsCountryInstanceLinksToJSON(
  voiceV1DialingPermissionsDialingPermissionsCountryInstanceLinks:
    VoiceV1DialingPermissionsDialingPermissionsCountryInstanceLinks,
): string {
  return JSON.stringify(
    VoiceV1DialingPermissionsDialingPermissionsCountryInstanceLinks$outboundSchema
      .parse(voiceV1DialingPermissionsDialingPermissionsCountryInstanceLinks),
  );
}

export function voiceV1DialingPermissionsDialingPermissionsCountryInstanceLinksFromJSON(
  jsonString: string,
): SafeParseResult<
  VoiceV1DialingPermissionsDialingPermissionsCountryInstanceLinks,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      VoiceV1DialingPermissionsDialingPermissionsCountryInstanceLinks$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'VoiceV1DialingPermissionsDialingPermissionsCountryInstanceLinks' from JSON`,
  );
}

/** @internal */
export const VoiceV1DialingPermissionsDialingPermissionsCountryInstance$inboundSchema:
  z.ZodType<
    VoiceV1DialingPermissionsDialingPermissionsCountryInstance,
    z.ZodTypeDef,
    unknown
  > = z.object({
    iso_code: z.nullable(z.string()).optional(),
    name: z.nullable(z.string()).optional(),
    continent: z.nullable(z.string()).optional(),
    country_codes: z.nullable(z.array(z.string())).optional(),
    low_risk_numbers_enabled: z.nullable(z.boolean()).optional(),
    high_risk_special_numbers_enabled: z.nullable(z.boolean()).optional(),
    high_risk_tollfraud_numbers_enabled: z.nullable(z.boolean()).optional(),
    url: z.nullable(z.string()).optional(),
    links: z.nullable(
      z.lazy(() =>
        VoiceV1DialingPermissionsDialingPermissionsCountryInstanceLinks$inboundSchema
      ),
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "iso_code": "isoCode",
      "country_codes": "countryCodes",
      "low_risk_numbers_enabled": "lowRiskNumbersEnabled",
      "high_risk_special_numbers_enabled": "highRiskSpecialNumbersEnabled",
      "high_risk_tollfraud_numbers_enabled": "highRiskTollfraudNumbersEnabled",
    });
  });

/** @internal */
export type VoiceV1DialingPermissionsDialingPermissionsCountryInstance$Outbound =
  {
    iso_code?: string | null | undefined;
    name?: string | null | undefined;
    continent?: string | null | undefined;
    country_codes?: Array<string> | null | undefined;
    low_risk_numbers_enabled?: boolean | null | undefined;
    high_risk_special_numbers_enabled?: boolean | null | undefined;
    high_risk_tollfraud_numbers_enabled?: boolean | null | undefined;
    url?: string | null | undefined;
    links?:
      | VoiceV1DialingPermissionsDialingPermissionsCountryInstanceLinks$Outbound
      | null
      | undefined;
  };

/** @internal */
export const VoiceV1DialingPermissionsDialingPermissionsCountryInstance$outboundSchema:
  z.ZodType<
    VoiceV1DialingPermissionsDialingPermissionsCountryInstance$Outbound,
    z.ZodTypeDef,
    VoiceV1DialingPermissionsDialingPermissionsCountryInstance
  > = z.object({
    isoCode: z.nullable(z.string()).optional(),
    name: z.nullable(z.string()).optional(),
    continent: z.nullable(z.string()).optional(),
    countryCodes: z.nullable(z.array(z.string())).optional(),
    lowRiskNumbersEnabled: z.nullable(z.boolean()).optional(),
    highRiskSpecialNumbersEnabled: z.nullable(z.boolean()).optional(),
    highRiskTollfraudNumbersEnabled: z.nullable(z.boolean()).optional(),
    url: z.nullable(z.string()).optional(),
    links: z.nullable(
      z.lazy(() =>
        VoiceV1DialingPermissionsDialingPermissionsCountryInstanceLinks$outboundSchema
      ),
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      isoCode: "iso_code",
      countryCodes: "country_codes",
      lowRiskNumbersEnabled: "low_risk_numbers_enabled",
      highRiskSpecialNumbersEnabled: "high_risk_special_numbers_enabled",
      highRiskTollfraudNumbersEnabled: "high_risk_tollfraud_numbers_enabled",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VoiceV1DialingPermissionsDialingPermissionsCountryInstance$ {
  /** @deprecated use `VoiceV1DialingPermissionsDialingPermissionsCountryInstance$inboundSchema` instead. */
  export const inboundSchema =
    VoiceV1DialingPermissionsDialingPermissionsCountryInstance$inboundSchema;
  /** @deprecated use `VoiceV1DialingPermissionsDialingPermissionsCountryInstance$outboundSchema` instead. */
  export const outboundSchema =
    VoiceV1DialingPermissionsDialingPermissionsCountryInstance$outboundSchema;
  /** @deprecated use `VoiceV1DialingPermissionsDialingPermissionsCountryInstance$Outbound` instead. */
  export type Outbound =
    VoiceV1DialingPermissionsDialingPermissionsCountryInstance$Outbound;
}

export function voiceV1DialingPermissionsDialingPermissionsCountryInstanceToJSON(
  voiceV1DialingPermissionsDialingPermissionsCountryInstance:
    VoiceV1DialingPermissionsDialingPermissionsCountryInstance,
): string {
  return JSON.stringify(
    VoiceV1DialingPermissionsDialingPermissionsCountryInstance$outboundSchema
      .parse(voiceV1DialingPermissionsDialingPermissionsCountryInstance),
  );
}

export function voiceV1DialingPermissionsDialingPermissionsCountryInstanceFromJSON(
  jsonString: string,
): SafeParseResult<
  VoiceV1DialingPermissionsDialingPermissionsCountryInstance,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      VoiceV1DialingPermissionsDialingPermissionsCountryInstance$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'VoiceV1DialingPermissionsDialingPermissionsCountryInstance' from JSON`,
  );
}
