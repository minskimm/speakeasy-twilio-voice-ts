/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { voiceV1ByocTrunkCreateByocTrunk } from "../funcs/voiceV1ByocTrunkCreateByocTrunk.js";
import { voiceV1ByocTrunkDeleteByocTrunk } from "../funcs/voiceV1ByocTrunkDeleteByocTrunk.js";
import { voiceV1ByocTrunkFetchByocTrunk } from "../funcs/voiceV1ByocTrunkFetchByocTrunk.js";
import { voiceV1ByocTrunkListByocTrunk } from "../funcs/voiceV1ByocTrunkListByocTrunk.js";
import { voiceV1ByocTrunkUpdateByocTrunk } from "../funcs/voiceV1ByocTrunkUpdateByocTrunk.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class VoiceV1ByocTrunk extends ClientSDK {
  async createByocTrunk(
    request?: operations.CreateByocTrunkCreateByocTrunkRequest | undefined,
    options?: RequestOptions,
  ): Promise<operations.CreateByocTrunkResponse> {
    return unwrapAsync(voiceV1ByocTrunkCreateByocTrunk(
      this,
      request,
      options,
    ));
  }

  async listByocTrunk(
    request: operations.ListByocTrunkRequest,
    options?: RequestOptions,
  ): Promise<operations.ListByocTrunkResponse> {
    return unwrapAsync(voiceV1ByocTrunkListByocTrunk(
      this,
      request,
      options,
    ));
  }

  async fetchByocTrunk(
    request: operations.FetchByocTrunkRequest,
    options?: RequestOptions,
  ): Promise<operations.FetchByocTrunkResponse> {
    return unwrapAsync(voiceV1ByocTrunkFetchByocTrunk(
      this,
      request,
      options,
    ));
  }

  async updateByocTrunk(
    request: operations.UpdateByocTrunkRequest,
    options?: RequestOptions,
  ): Promise<operations.UpdateByocTrunkResponse> {
    return unwrapAsync(voiceV1ByocTrunkUpdateByocTrunk(
      this,
      request,
      options,
    ));
  }

  async deleteByocTrunk(
    request: operations.DeleteByocTrunkRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(voiceV1ByocTrunkDeleteByocTrunk(
      this,
      request,
      options,
    ));
  }
}
