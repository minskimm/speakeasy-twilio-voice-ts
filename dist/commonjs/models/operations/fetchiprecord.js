"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.FetchIpRecordResponse$ = exports.FetchIpRecordResponse$outboundSchema = exports.FetchIpRecordResponse$inboundSchema = exports.FetchIpRecordRequest$ = exports.FetchIpRecordRequest$outboundSchema = exports.FetchIpRecordRequest$inboundSchema = exports.FetchIpRecordServerList = void 0;
exports.fetchIpRecordRequestToJSON = fetchIpRecordRequestToJSON;
exports.fetchIpRecordRequestFromJSON = fetchIpRecordRequestFromJSON;
exports.fetchIpRecordResponseToJSON = fetchIpRecordResponseToJSON;
exports.fetchIpRecordResponseFromJSON = fetchIpRecordResponseFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const components = __importStar(require("../components/index.js"));
exports.FetchIpRecordServerList = [
    "https://voice.twilio.com",
];
/** @internal */
exports.FetchIpRecordRequest$inboundSchema = z.object({
    Sid: z.string(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "Sid": "sid",
    });
});
/** @internal */
exports.FetchIpRecordRequest$outboundSchema = z.object({
    sid: z.string(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        sid: "Sid",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var FetchIpRecordRequest$;
(function (FetchIpRecordRequest$) {
    /** @deprecated use `FetchIpRecordRequest$inboundSchema` instead. */
    FetchIpRecordRequest$.inboundSchema = exports.FetchIpRecordRequest$inboundSchema;
    /** @deprecated use `FetchIpRecordRequest$outboundSchema` instead. */
    FetchIpRecordRequest$.outboundSchema = exports.FetchIpRecordRequest$outboundSchema;
})(FetchIpRecordRequest$ || (exports.FetchIpRecordRequest$ = FetchIpRecordRequest$ = {}));
function fetchIpRecordRequestToJSON(fetchIpRecordRequest) {
    return JSON.stringify(exports.FetchIpRecordRequest$outboundSchema.parse(fetchIpRecordRequest));
}
function fetchIpRecordRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.FetchIpRecordRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FetchIpRecordRequest' from JSON`);
}
/** @internal */
exports.FetchIpRecordResponse$inboundSchema = z.object({
    Headers: z.record(z.array(z.string())),
    Result: components.VoiceV1IpRecord$inboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "Headers": "headers",
        "Result": "result",
    });
});
/** @internal */
exports.FetchIpRecordResponse$outboundSchema = z.object({
    headers: z.record(z.array(z.string())),
    result: components.VoiceV1IpRecord$outboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        headers: "Headers",
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var FetchIpRecordResponse$;
(function (FetchIpRecordResponse$) {
    /** @deprecated use `FetchIpRecordResponse$inboundSchema` instead. */
    FetchIpRecordResponse$.inboundSchema = exports.FetchIpRecordResponse$inboundSchema;
    /** @deprecated use `FetchIpRecordResponse$outboundSchema` instead. */
    FetchIpRecordResponse$.outboundSchema = exports.FetchIpRecordResponse$outboundSchema;
})(FetchIpRecordResponse$ || (exports.FetchIpRecordResponse$ = FetchIpRecordResponse$ = {}));
function fetchIpRecordResponseToJSON(fetchIpRecordResponse) {
    return JSON.stringify(exports.FetchIpRecordResponse$outboundSchema.parse(fetchIpRecordResponse));
}
function fetchIpRecordResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.FetchIpRecordResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FetchIpRecordResponse' from JSON`);
}
//# sourceMappingURL=fetchiprecord.js.map