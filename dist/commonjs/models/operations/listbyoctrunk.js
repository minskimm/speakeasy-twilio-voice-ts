"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ListByocTrunkResponse$ = exports.ListByocTrunkResponse$outboundSchema = exports.ListByocTrunkResponse$inboundSchema = exports.ListByocTrunkListByocTrunkResponse$ = exports.ListByocTrunkListByocTrunkResponse$outboundSchema = exports.ListByocTrunkListByocTrunkResponse$inboundSchema = exports.Meta$ = exports.Meta$outboundSchema = exports.Meta$inboundSchema = exports.ListByocTrunkRequest$ = exports.ListByocTrunkRequest$outboundSchema = exports.ListByocTrunkRequest$inboundSchema = exports.ListByocTrunkServerList = void 0;
exports.listByocTrunkRequestToJSON = listByocTrunkRequestToJSON;
exports.listByocTrunkRequestFromJSON = listByocTrunkRequestFromJSON;
exports.metaToJSON = metaToJSON;
exports.metaFromJSON = metaFromJSON;
exports.listByocTrunkListByocTrunkResponseToJSON = listByocTrunkListByocTrunkResponseToJSON;
exports.listByocTrunkListByocTrunkResponseFromJSON = listByocTrunkListByocTrunkResponseFromJSON;
exports.listByocTrunkResponseToJSON = listByocTrunkResponseToJSON;
exports.listByocTrunkResponseFromJSON = listByocTrunkResponseFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const components = __importStar(require("../components/index.js"));
exports.ListByocTrunkServerList = [
    "https://voice.twilio.com",
];
/** @internal */
exports.ListByocTrunkRequest$inboundSchema = z.object({
    PageSize: z.number().int().optional(),
    Page: z.number().int().optional(),
    PageToken: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "PageSize": "pageSize",
        "Page": "page",
        "PageToken": "pageToken",
    });
});
/** @internal */
exports.ListByocTrunkRequest$outboundSchema = z.object({
    pageSize: z.number().int().optional(),
    page: z.number().int().optional(),
    pageToken: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        pageSize: "PageSize",
        page: "Page",
        pageToken: "PageToken",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ListByocTrunkRequest$;
(function (ListByocTrunkRequest$) {
    /** @deprecated use `ListByocTrunkRequest$inboundSchema` instead. */
    ListByocTrunkRequest$.inboundSchema = exports.ListByocTrunkRequest$inboundSchema;
    /** @deprecated use `ListByocTrunkRequest$outboundSchema` instead. */
    ListByocTrunkRequest$.outboundSchema = exports.ListByocTrunkRequest$outboundSchema;
})(ListByocTrunkRequest$ || (exports.ListByocTrunkRequest$ = ListByocTrunkRequest$ = {}));
function listByocTrunkRequestToJSON(listByocTrunkRequest) {
    return JSON.stringify(exports.ListByocTrunkRequest$outboundSchema.parse(listByocTrunkRequest));
}
function listByocTrunkRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ListByocTrunkRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListByocTrunkRequest' from JSON`);
}
/** @internal */
exports.Meta$inboundSchema = z
    .object({
    first_page_url: z.string().optional(),
    key: z.string().optional(),
    next_page_url: z.nullable(z.string()).optional(),
    page: z.number().int().optional(),
    page_size: z.number().int().optional(),
    previous_page_url: z.nullable(z.string()).optional(),
    url: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "first_page_url": "firstPageUrl",
        "next_page_url": "nextPageUrl",
        "page_size": "pageSize",
        "previous_page_url": "previousPageUrl",
    });
});
/** @internal */
exports.Meta$outboundSchema = z.object({
    firstPageUrl: z.string().optional(),
    key: z.string().optional(),
    nextPageUrl: z.nullable(z.string()).optional(),
    page: z.number().int().optional(),
    pageSize: z.number().int().optional(),
    previousPageUrl: z.nullable(z.string()).optional(),
    url: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        firstPageUrl: "first_page_url",
        nextPageUrl: "next_page_url",
        pageSize: "page_size",
        previousPageUrl: "previous_page_url",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Meta$;
(function (Meta$) {
    /** @deprecated use `Meta$inboundSchema` instead. */
    Meta$.inboundSchema = exports.Meta$inboundSchema;
    /** @deprecated use `Meta$outboundSchema` instead. */
    Meta$.outboundSchema = exports.Meta$outboundSchema;
})(Meta$ || (exports.Meta$ = Meta$ = {}));
function metaToJSON(meta) {
    return JSON.stringify(exports.Meta$outboundSchema.parse(meta));
}
function metaFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.Meta$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Meta' from JSON`);
}
/** @internal */
exports.ListByocTrunkListByocTrunkResponse$inboundSchema = z.object({
    byoc_trunks: z.array(components.VoiceV1ByocTrunk$inboundSchema).optional(),
    meta: z.lazy(() => exports.Meta$inboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "byoc_trunks": "byocTrunks",
    });
});
/** @internal */
exports.ListByocTrunkListByocTrunkResponse$outboundSchema = z.object({
    byocTrunks: z.array(components.VoiceV1ByocTrunk$outboundSchema).optional(),
    meta: z.lazy(() => exports.Meta$outboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        byocTrunks: "byoc_trunks",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ListByocTrunkListByocTrunkResponse$;
(function (ListByocTrunkListByocTrunkResponse$) {
    /** @deprecated use `ListByocTrunkListByocTrunkResponse$inboundSchema` instead. */
    ListByocTrunkListByocTrunkResponse$.inboundSchema = exports.ListByocTrunkListByocTrunkResponse$inboundSchema;
    /** @deprecated use `ListByocTrunkListByocTrunkResponse$outboundSchema` instead. */
    ListByocTrunkListByocTrunkResponse$.outboundSchema = exports.ListByocTrunkListByocTrunkResponse$outboundSchema;
})(ListByocTrunkListByocTrunkResponse$ || (exports.ListByocTrunkListByocTrunkResponse$ = ListByocTrunkListByocTrunkResponse$ = {}));
function listByocTrunkListByocTrunkResponseToJSON(listByocTrunkListByocTrunkResponse) {
    return JSON.stringify(exports.ListByocTrunkListByocTrunkResponse$outboundSchema.parse(listByocTrunkListByocTrunkResponse));
}
function listByocTrunkListByocTrunkResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ListByocTrunkListByocTrunkResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListByocTrunkListByocTrunkResponse' from JSON`);
}
/** @internal */
exports.ListByocTrunkResponse$inboundSchema = z.object({
    Headers: z.record(z.array(z.string())),
    Result: z.lazy(() => exports.ListByocTrunkListByocTrunkResponse$inboundSchema),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "Headers": "headers",
        "Result": "result",
    });
});
/** @internal */
exports.ListByocTrunkResponse$outboundSchema = z.object({
    headers: z.record(z.array(z.string())),
    result: z.lazy(() => exports.ListByocTrunkListByocTrunkResponse$outboundSchema),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        headers: "Headers",
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ListByocTrunkResponse$;
(function (ListByocTrunkResponse$) {
    /** @deprecated use `ListByocTrunkResponse$inboundSchema` instead. */
    ListByocTrunkResponse$.inboundSchema = exports.ListByocTrunkResponse$inboundSchema;
    /** @deprecated use `ListByocTrunkResponse$outboundSchema` instead. */
    ListByocTrunkResponse$.outboundSchema = exports.ListByocTrunkResponse$outboundSchema;
})(ListByocTrunkResponse$ || (exports.ListByocTrunkResponse$ = ListByocTrunkResponse$ = {}));
function listByocTrunkResponseToJSON(listByocTrunkResponse) {
    return JSON.stringify(exports.ListByocTrunkResponse$outboundSchema.parse(listByocTrunkResponse));
}
function listByocTrunkResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ListByocTrunkResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListByocTrunkResponse' from JSON`);
}
//# sourceMappingURL=listbyoctrunk.js.map