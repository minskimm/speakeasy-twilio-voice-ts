"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ListConnectionPolicyResponse$ = exports.ListConnectionPolicyResponse$outboundSchema = exports.ListConnectionPolicyResponse$inboundSchema = exports.ListConnectionPolicyListConnectionPolicyResponse$ = exports.ListConnectionPolicyListConnectionPolicyResponse$outboundSchema = exports.ListConnectionPolicyListConnectionPolicyResponse$inboundSchema = exports.ListConnectionPolicyMeta$ = exports.ListConnectionPolicyMeta$outboundSchema = exports.ListConnectionPolicyMeta$inboundSchema = exports.ListConnectionPolicyRequest$ = exports.ListConnectionPolicyRequest$outboundSchema = exports.ListConnectionPolicyRequest$inboundSchema = exports.ListConnectionPolicyServerList = void 0;
exports.listConnectionPolicyRequestToJSON = listConnectionPolicyRequestToJSON;
exports.listConnectionPolicyRequestFromJSON = listConnectionPolicyRequestFromJSON;
exports.listConnectionPolicyMetaToJSON = listConnectionPolicyMetaToJSON;
exports.listConnectionPolicyMetaFromJSON = listConnectionPolicyMetaFromJSON;
exports.listConnectionPolicyListConnectionPolicyResponseToJSON = listConnectionPolicyListConnectionPolicyResponseToJSON;
exports.listConnectionPolicyListConnectionPolicyResponseFromJSON = listConnectionPolicyListConnectionPolicyResponseFromJSON;
exports.listConnectionPolicyResponseToJSON = listConnectionPolicyResponseToJSON;
exports.listConnectionPolicyResponseFromJSON = listConnectionPolicyResponseFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const components = __importStar(require("../components/index.js"));
exports.ListConnectionPolicyServerList = [
    "https://voice.twilio.com",
];
/** @internal */
exports.ListConnectionPolicyRequest$inboundSchema = z.object({
    PageSize: z.number().int().optional(),
    Page: z.number().int().optional(),
    PageToken: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "PageSize": "pageSize",
        "Page": "page",
        "PageToken": "pageToken",
    });
});
/** @internal */
exports.ListConnectionPolicyRequest$outboundSchema = z.object({
    pageSize: z.number().int().optional(),
    page: z.number().int().optional(),
    pageToken: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        pageSize: "PageSize",
        page: "Page",
        pageToken: "PageToken",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ListConnectionPolicyRequest$;
(function (ListConnectionPolicyRequest$) {
    /** @deprecated use `ListConnectionPolicyRequest$inboundSchema` instead. */
    ListConnectionPolicyRequest$.inboundSchema = exports.ListConnectionPolicyRequest$inboundSchema;
    /** @deprecated use `ListConnectionPolicyRequest$outboundSchema` instead. */
    ListConnectionPolicyRequest$.outboundSchema = exports.ListConnectionPolicyRequest$outboundSchema;
})(ListConnectionPolicyRequest$ || (exports.ListConnectionPolicyRequest$ = ListConnectionPolicyRequest$ = {}));
function listConnectionPolicyRequestToJSON(listConnectionPolicyRequest) {
    return JSON.stringify(exports.ListConnectionPolicyRequest$outboundSchema.parse(listConnectionPolicyRequest));
}
function listConnectionPolicyRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ListConnectionPolicyRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListConnectionPolicyRequest' from JSON`);
}
/** @internal */
exports.ListConnectionPolicyMeta$inboundSchema = z.object({
    first_page_url: z.string().optional(),
    key: z.string().optional(),
    next_page_url: z.nullable(z.string()).optional(),
    page: z.number().int().optional(),
    page_size: z.number().int().optional(),
    previous_page_url: z.nullable(z.string()).optional(),
    url: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "first_page_url": "firstPageUrl",
        "next_page_url": "nextPageUrl",
        "page_size": "pageSize",
        "previous_page_url": "previousPageUrl",
    });
});
/** @internal */
exports.ListConnectionPolicyMeta$outboundSchema = z.object({
    firstPageUrl: z.string().optional(),
    key: z.string().optional(),
    nextPageUrl: z.nullable(z.string()).optional(),
    page: z.number().int().optional(),
    pageSize: z.number().int().optional(),
    previousPageUrl: z.nullable(z.string()).optional(),
    url: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        firstPageUrl: "first_page_url",
        nextPageUrl: "next_page_url",
        pageSize: "page_size",
        previousPageUrl: "previous_page_url",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ListConnectionPolicyMeta$;
(function (ListConnectionPolicyMeta$) {
    /** @deprecated use `ListConnectionPolicyMeta$inboundSchema` instead. */
    ListConnectionPolicyMeta$.inboundSchema = exports.ListConnectionPolicyMeta$inboundSchema;
    /** @deprecated use `ListConnectionPolicyMeta$outboundSchema` instead. */
    ListConnectionPolicyMeta$.outboundSchema = exports.ListConnectionPolicyMeta$outboundSchema;
})(ListConnectionPolicyMeta$ || (exports.ListConnectionPolicyMeta$ = ListConnectionPolicyMeta$ = {}));
function listConnectionPolicyMetaToJSON(listConnectionPolicyMeta) {
    return JSON.stringify(exports.ListConnectionPolicyMeta$outboundSchema.parse(listConnectionPolicyMeta));
}
function listConnectionPolicyMetaFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ListConnectionPolicyMeta$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListConnectionPolicyMeta' from JSON`);
}
/** @internal */
exports.ListConnectionPolicyListConnectionPolicyResponse$inboundSchema = z.object({
    connection_policies: z.array(components.VoiceV1ConnectionPolicy$inboundSchema).optional(),
    meta: z.lazy(() => exports.ListConnectionPolicyMeta$inboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "connection_policies": "connectionPolicies",
    });
});
/** @internal */
exports.ListConnectionPolicyListConnectionPolicyResponse$outboundSchema = z.object({
    connectionPolicies: z.array(components.VoiceV1ConnectionPolicy$outboundSchema).optional(),
    meta: z.lazy(() => exports.ListConnectionPolicyMeta$outboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        connectionPolicies: "connection_policies",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ListConnectionPolicyListConnectionPolicyResponse$;
(function (ListConnectionPolicyListConnectionPolicyResponse$) {
    /** @deprecated use `ListConnectionPolicyListConnectionPolicyResponse$inboundSchema` instead. */
    ListConnectionPolicyListConnectionPolicyResponse$.inboundSchema = exports.ListConnectionPolicyListConnectionPolicyResponse$inboundSchema;
    /** @deprecated use `ListConnectionPolicyListConnectionPolicyResponse$outboundSchema` instead. */
    ListConnectionPolicyListConnectionPolicyResponse$.outboundSchema = exports.ListConnectionPolicyListConnectionPolicyResponse$outboundSchema;
})(ListConnectionPolicyListConnectionPolicyResponse$ || (exports.ListConnectionPolicyListConnectionPolicyResponse$ = ListConnectionPolicyListConnectionPolicyResponse$ = {}));
function listConnectionPolicyListConnectionPolicyResponseToJSON(listConnectionPolicyListConnectionPolicyResponse) {
    return JSON.stringify(exports.ListConnectionPolicyListConnectionPolicyResponse$outboundSchema.parse(listConnectionPolicyListConnectionPolicyResponse));
}
function listConnectionPolicyListConnectionPolicyResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ListConnectionPolicyListConnectionPolicyResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListConnectionPolicyListConnectionPolicyResponse' from JSON`);
}
/** @internal */
exports.ListConnectionPolicyResponse$inboundSchema = z.object({
    Headers: z.record(z.array(z.string())),
    Result: z.lazy(() => exports.ListConnectionPolicyListConnectionPolicyResponse$inboundSchema),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "Headers": "headers",
        "Result": "result",
    });
});
/** @internal */
exports.ListConnectionPolicyResponse$outboundSchema = z.object({
    headers: z.record(z.array(z.string())),
    result: z.lazy(() => exports.ListConnectionPolicyListConnectionPolicyResponse$outboundSchema),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        headers: "Headers",
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ListConnectionPolicyResponse$;
(function (ListConnectionPolicyResponse$) {
    /** @deprecated use `ListConnectionPolicyResponse$inboundSchema` instead. */
    ListConnectionPolicyResponse$.inboundSchema = exports.ListConnectionPolicyResponse$inboundSchema;
    /** @deprecated use `ListConnectionPolicyResponse$outboundSchema` instead. */
    ListConnectionPolicyResponse$.outboundSchema = exports.ListConnectionPolicyResponse$outboundSchema;
})(ListConnectionPolicyResponse$ || (exports.ListConnectionPolicyResponse$ = ListConnectionPolicyResponse$ = {}));
function listConnectionPolicyResponseToJSON(listConnectionPolicyResponse) {
    return JSON.stringify(exports.ListConnectionPolicyResponse$outboundSchema.parse(listConnectionPolicyResponse));
}
function listConnectionPolicyResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.ListConnectionPolicyResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListConnectionPolicyResponse' from JSON`);
}
//# sourceMappingURL=listconnectionpolicy.js.map