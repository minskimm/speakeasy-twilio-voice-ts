"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateConnectionPolicyTargetResponse$ = exports.UpdateConnectionPolicyTargetResponse$outboundSchema = exports.UpdateConnectionPolicyTargetResponse$inboundSchema = exports.UpdateConnectionPolicyTargetRequest$ = exports.UpdateConnectionPolicyTargetRequest$outboundSchema = exports.UpdateConnectionPolicyTargetRequest$inboundSchema = exports.UpdateConnectionPolicyTargetUpdateConnectionPolicyTargetRequest$ = exports.UpdateConnectionPolicyTargetUpdateConnectionPolicyTargetRequest$outboundSchema = exports.UpdateConnectionPolicyTargetUpdateConnectionPolicyTargetRequest$inboundSchema = exports.UpdateConnectionPolicyTargetServerList = void 0;
exports.updateConnectionPolicyTargetUpdateConnectionPolicyTargetRequestToJSON = updateConnectionPolicyTargetUpdateConnectionPolicyTargetRequestToJSON;
exports.updateConnectionPolicyTargetUpdateConnectionPolicyTargetRequestFromJSON = updateConnectionPolicyTargetUpdateConnectionPolicyTargetRequestFromJSON;
exports.updateConnectionPolicyTargetRequestToJSON = updateConnectionPolicyTargetRequestToJSON;
exports.updateConnectionPolicyTargetRequestFromJSON = updateConnectionPolicyTargetRequestFromJSON;
exports.updateConnectionPolicyTargetResponseToJSON = updateConnectionPolicyTargetResponseToJSON;
exports.updateConnectionPolicyTargetResponseFromJSON = updateConnectionPolicyTargetResponseFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const components = __importStar(require("../components/index.js"));
exports.UpdateConnectionPolicyTargetServerList = [
    "https://voice.twilio.com",
];
/** @internal */
exports.UpdateConnectionPolicyTargetUpdateConnectionPolicyTargetRequest$inboundSchema = z.object({
    FriendlyName: z.string().optional(),
    Target: z.string().optional(),
    Priority: z.number().int().optional(),
    Weight: z.number().int().optional(),
    Enabled: z.boolean().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "FriendlyName": "friendlyName",
        "Target": "target",
        "Priority": "priority",
        "Weight": "weight",
        "Enabled": "enabled",
    });
});
/** @internal */
exports.UpdateConnectionPolicyTargetUpdateConnectionPolicyTargetRequest$outboundSchema = z.object({
    friendlyName: z.string().optional(),
    target: z.string().optional(),
    priority: z.number().int().optional(),
    weight: z.number().int().optional(),
    enabled: z.boolean().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        friendlyName: "FriendlyName",
        target: "Target",
        priority: "Priority",
        weight: "Weight",
        enabled: "Enabled",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var UpdateConnectionPolicyTargetUpdateConnectionPolicyTargetRequest$;
(function (UpdateConnectionPolicyTargetUpdateConnectionPolicyTargetRequest$) {
    /** @deprecated use `UpdateConnectionPolicyTargetUpdateConnectionPolicyTargetRequest$inboundSchema` instead. */
    UpdateConnectionPolicyTargetUpdateConnectionPolicyTargetRequest$.inboundSchema = exports.UpdateConnectionPolicyTargetUpdateConnectionPolicyTargetRequest$inboundSchema;
    /** @deprecated use `UpdateConnectionPolicyTargetUpdateConnectionPolicyTargetRequest$outboundSchema` instead. */
    UpdateConnectionPolicyTargetUpdateConnectionPolicyTargetRequest$.outboundSchema = exports.UpdateConnectionPolicyTargetUpdateConnectionPolicyTargetRequest$outboundSchema;
})(UpdateConnectionPolicyTargetUpdateConnectionPolicyTargetRequest$ || (exports.UpdateConnectionPolicyTargetUpdateConnectionPolicyTargetRequest$ = UpdateConnectionPolicyTargetUpdateConnectionPolicyTargetRequest$ = {}));
function updateConnectionPolicyTargetUpdateConnectionPolicyTargetRequestToJSON(updateConnectionPolicyTargetUpdateConnectionPolicyTargetRequest) {
    return JSON.stringify(exports.UpdateConnectionPolicyTargetUpdateConnectionPolicyTargetRequest$outboundSchema
        .parse(updateConnectionPolicyTargetUpdateConnectionPolicyTargetRequest));
}
function updateConnectionPolicyTargetUpdateConnectionPolicyTargetRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.UpdateConnectionPolicyTargetUpdateConnectionPolicyTargetRequest$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'UpdateConnectionPolicyTargetUpdateConnectionPolicyTargetRequest' from JSON`);
}
/** @internal */
exports.UpdateConnectionPolicyTargetRequest$inboundSchema = z.object({
    ConnectionPolicySid: z.string(),
    Sid: z.string(),
    RequestBody: z.lazy(() => exports.UpdateConnectionPolicyTargetUpdateConnectionPolicyTargetRequest$inboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "ConnectionPolicySid": "connectionPolicySid",
        "Sid": "sid",
        "RequestBody": "requestBody",
    });
});
/** @internal */
exports.UpdateConnectionPolicyTargetRequest$outboundSchema = z.object({
    connectionPolicySid: z.string(),
    sid: z.string(),
    requestBody: z.lazy(() => exports.UpdateConnectionPolicyTargetUpdateConnectionPolicyTargetRequest$outboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        connectionPolicySid: "ConnectionPolicySid",
        sid: "Sid",
        requestBody: "RequestBody",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var UpdateConnectionPolicyTargetRequest$;
(function (UpdateConnectionPolicyTargetRequest$) {
    /** @deprecated use `UpdateConnectionPolicyTargetRequest$inboundSchema` instead. */
    UpdateConnectionPolicyTargetRequest$.inboundSchema = exports.UpdateConnectionPolicyTargetRequest$inboundSchema;
    /** @deprecated use `UpdateConnectionPolicyTargetRequest$outboundSchema` instead. */
    UpdateConnectionPolicyTargetRequest$.outboundSchema = exports.UpdateConnectionPolicyTargetRequest$outboundSchema;
})(UpdateConnectionPolicyTargetRequest$ || (exports.UpdateConnectionPolicyTargetRequest$ = UpdateConnectionPolicyTargetRequest$ = {}));
function updateConnectionPolicyTargetRequestToJSON(updateConnectionPolicyTargetRequest) {
    return JSON.stringify(exports.UpdateConnectionPolicyTargetRequest$outboundSchema.parse(updateConnectionPolicyTargetRequest));
}
function updateConnectionPolicyTargetRequestFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.UpdateConnectionPolicyTargetRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateConnectionPolicyTargetRequest' from JSON`);
}
/** @internal */
exports.UpdateConnectionPolicyTargetResponse$inboundSchema = z.object({
    Headers: z.record(z.array(z.string())),
    Result: components.VoiceV1ConnectionPolicyConnectionPolicyTarget$inboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "Headers": "headers",
        "Result": "result",
    });
});
/** @internal */
exports.UpdateConnectionPolicyTargetResponse$outboundSchema = z.object({
    headers: z.record(z.array(z.string())),
    result: components.VoiceV1ConnectionPolicyConnectionPolicyTarget$outboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        headers: "Headers",
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var UpdateConnectionPolicyTargetResponse$;
(function (UpdateConnectionPolicyTargetResponse$) {
    /** @deprecated use `UpdateConnectionPolicyTargetResponse$inboundSchema` instead. */
    UpdateConnectionPolicyTargetResponse$.inboundSchema = exports.UpdateConnectionPolicyTargetResponse$inboundSchema;
    /** @deprecated use `UpdateConnectionPolicyTargetResponse$outboundSchema` instead. */
    UpdateConnectionPolicyTargetResponse$.outboundSchema = exports.UpdateConnectionPolicyTargetResponse$outboundSchema;
})(UpdateConnectionPolicyTargetResponse$ || (exports.UpdateConnectionPolicyTargetResponse$ = UpdateConnectionPolicyTargetResponse$ = {}));
function updateConnectionPolicyTargetResponseToJSON(updateConnectionPolicyTargetResponse) {
    return JSON.stringify(exports.UpdateConnectionPolicyTargetResponse$outboundSchema.parse(updateConnectionPolicyTargetResponse));
}
function updateConnectionPolicyTargetResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.UpdateConnectionPolicyTargetResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateConnectionPolicyTargetResponse' from JSON`);
}
//# sourceMappingURL=updateconnectionpolicytarget.js.map