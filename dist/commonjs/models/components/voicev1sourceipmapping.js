"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.VoiceV1SourceIpMapping$ = exports.VoiceV1SourceIpMapping$outboundSchema = exports.VoiceV1SourceIpMapping$inboundSchema = void 0;
exports.voiceV1SourceIpMappingToJSON = voiceV1SourceIpMappingToJSON;
exports.voiceV1SourceIpMappingFromJSON = voiceV1SourceIpMappingFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
/** @internal */
exports.VoiceV1SourceIpMapping$inboundSchema = z.object({
    sid: z.nullable(z.string()).optional(),
    ip_record_sid: z.nullable(z.string()).optional(),
    sip_domain_sid: z.nullable(z.string()).optional(),
    date_created: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    date_updated: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    url: z.nullable(z.string()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "ip_record_sid": "ipRecordSid",
        "sip_domain_sid": "sipDomainSid",
        "date_created": "dateCreated",
        "date_updated": "dateUpdated",
    });
});
/** @internal */
exports.VoiceV1SourceIpMapping$outboundSchema = z.object({
    sid: z.nullable(z.string()).optional(),
    ipRecordSid: z.nullable(z.string()).optional(),
    sipDomainSid: z.nullable(z.string()).optional(),
    dateCreated: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    dateUpdated: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    url: z.nullable(z.string()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        ipRecordSid: "ip_record_sid",
        sipDomainSid: "sip_domain_sid",
        dateCreated: "date_created",
        dateUpdated: "date_updated",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var VoiceV1SourceIpMapping$;
(function (VoiceV1SourceIpMapping$) {
    /** @deprecated use `VoiceV1SourceIpMapping$inboundSchema` instead. */
    VoiceV1SourceIpMapping$.inboundSchema = exports.VoiceV1SourceIpMapping$inboundSchema;
    /** @deprecated use `VoiceV1SourceIpMapping$outboundSchema` instead. */
    VoiceV1SourceIpMapping$.outboundSchema = exports.VoiceV1SourceIpMapping$outboundSchema;
})(VoiceV1SourceIpMapping$ || (exports.VoiceV1SourceIpMapping$ = VoiceV1SourceIpMapping$ = {}));
function voiceV1SourceIpMappingToJSON(voiceV1SourceIpMapping) {
    return JSON.stringify(exports.VoiceV1SourceIpMapping$outboundSchema.parse(voiceV1SourceIpMapping));
}
function voiceV1SourceIpMappingFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.VoiceV1SourceIpMapping$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'VoiceV1SourceIpMapping' from JSON`);
}
//# sourceMappingURL=voicev1sourceipmapping.js.map