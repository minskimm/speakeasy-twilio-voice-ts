/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { voiceV1ConnectionPolicyTargetCreateConnectionPolicyTarget } from "../funcs/voiceV1ConnectionPolicyTargetCreateConnectionPolicyTarget.js";
import { voiceV1ConnectionPolicyTargetDeleteConnectionPolicyTarget } from "../funcs/voiceV1ConnectionPolicyTargetDeleteConnectionPolicyTarget.js";
import { voiceV1ConnectionPolicyTargetFetchConnectionPolicyTarget } from "../funcs/voiceV1ConnectionPolicyTargetFetchConnectionPolicyTarget.js";
import { voiceV1ConnectionPolicyTargetListConnectionPolicyTarget } from "../funcs/voiceV1ConnectionPolicyTargetListConnectionPolicyTarget.js";
import { voiceV1ConnectionPolicyTargetUpdateConnectionPolicyTarget } from "../funcs/voiceV1ConnectionPolicyTargetUpdateConnectionPolicyTarget.js";
import { ClientSDK } from "../lib/sdks.js";
import { unwrapAsync } from "../types/fp.js";
export class VoiceV1ConnectionPolicyTarget extends ClientSDK {
    async createConnectionPolicyTarget(request, options) {
        return unwrapAsync(voiceV1ConnectionPolicyTargetCreateConnectionPolicyTarget(this, request, options));
    }
    async listConnectionPolicyTarget(request, options) {
        return unwrapAsync(voiceV1ConnectionPolicyTargetListConnectionPolicyTarget(this, request, options));
    }
    async fetchConnectionPolicyTarget(request, options) {
        return unwrapAsync(voiceV1ConnectionPolicyTargetFetchConnectionPolicyTarget(this, request, options));
    }
    async updateConnectionPolicyTarget(request, options) {
        return unwrapAsync(voiceV1ConnectionPolicyTargetUpdateConnectionPolicyTarget(this, request, options));
    }
    async deleteConnectionPolicyTarget(request, options) {
        return unwrapAsync(voiceV1ConnectionPolicyTargetDeleteConnectionPolicyTarget(this, request, options));
    }
}
//# sourceMappingURL=voicev1connectionpolicytarget.js.map