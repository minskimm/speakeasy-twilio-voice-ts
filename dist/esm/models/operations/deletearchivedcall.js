/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { RFCDate } from "../../types/rfcdate.js";
export const DeleteArchivedCallServerList = [
    "https://voice.twilio.com",
];
/** @internal */
export const DeleteArchivedCallRequest$inboundSchema = z.object({
    Date: z.string().transform(v => new RFCDate(v)),
    Sid: z.string(),
}).transform((v) => {
    return remap$(v, {
        "Date": "date",
        "Sid": "sid",
    });
});
/** @internal */
export const DeleteArchivedCallRequest$outboundSchema = z.object({
    date: z.instanceof(RFCDate).transform(v => v.toString()),
    sid: z.string(),
}).transform((v) => {
    return remap$(v, {
        date: "Date",
        sid: "Sid",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteArchivedCallRequest$;
(function (DeleteArchivedCallRequest$) {
    /** @deprecated use `DeleteArchivedCallRequest$inboundSchema` instead. */
    DeleteArchivedCallRequest$.inboundSchema = DeleteArchivedCallRequest$inboundSchema;
    /** @deprecated use `DeleteArchivedCallRequest$outboundSchema` instead. */
    DeleteArchivedCallRequest$.outboundSchema = DeleteArchivedCallRequest$outboundSchema;
})(DeleteArchivedCallRequest$ || (DeleteArchivedCallRequest$ = {}));
export function deleteArchivedCallRequestToJSON(deleteArchivedCallRequest) {
    return JSON.stringify(DeleteArchivedCallRequest$outboundSchema.parse(deleteArchivedCallRequest));
}
export function deleteArchivedCallRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteArchivedCallRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteArchivedCallRequest' from JSON`);
}
//# sourceMappingURL=deletearchivedcall.js.map