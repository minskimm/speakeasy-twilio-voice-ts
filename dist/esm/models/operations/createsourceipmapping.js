/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
export const CreateSourceIpMappingServerList = [
    "https://voice.twilio.com",
];
/** @internal */
export const CreateSourceIpMappingCreateSourceIpMappingRequest$inboundSchema = z.object({
    IpRecordSid: z.string(),
    SipDomainSid: z.string(),
}).transform((v) => {
    return remap$(v, {
        "IpRecordSid": "ipRecordSid",
        "SipDomainSid": "sipDomainSid",
    });
});
/** @internal */
export const CreateSourceIpMappingCreateSourceIpMappingRequest$outboundSchema = z.object({
    ipRecordSid: z.string(),
    sipDomainSid: z.string(),
}).transform((v) => {
    return remap$(v, {
        ipRecordSid: "IpRecordSid",
        sipDomainSid: "SipDomainSid",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateSourceIpMappingCreateSourceIpMappingRequest$;
(function (CreateSourceIpMappingCreateSourceIpMappingRequest$) {
    /** @deprecated use `CreateSourceIpMappingCreateSourceIpMappingRequest$inboundSchema` instead. */
    CreateSourceIpMappingCreateSourceIpMappingRequest$.inboundSchema = CreateSourceIpMappingCreateSourceIpMappingRequest$inboundSchema;
    /** @deprecated use `CreateSourceIpMappingCreateSourceIpMappingRequest$outboundSchema` instead. */
    CreateSourceIpMappingCreateSourceIpMappingRequest$.outboundSchema = CreateSourceIpMappingCreateSourceIpMappingRequest$outboundSchema;
})(CreateSourceIpMappingCreateSourceIpMappingRequest$ || (CreateSourceIpMappingCreateSourceIpMappingRequest$ = {}));
export function createSourceIpMappingCreateSourceIpMappingRequestToJSON(createSourceIpMappingCreateSourceIpMappingRequest) {
    return JSON.stringify(CreateSourceIpMappingCreateSourceIpMappingRequest$outboundSchema.parse(createSourceIpMappingCreateSourceIpMappingRequest));
}
export function createSourceIpMappingCreateSourceIpMappingRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateSourceIpMappingCreateSourceIpMappingRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateSourceIpMappingCreateSourceIpMappingRequest' from JSON`);
}
/** @internal */
export const CreateSourceIpMappingResponse$inboundSchema = z.object({
    Headers: z.record(z.array(z.string())),
    Result: components.VoiceV1SourceIpMapping$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "Headers": "headers",
        "Result": "result",
    });
});
/** @internal */
export const CreateSourceIpMappingResponse$outboundSchema = z.object({
    headers: z.record(z.array(z.string())),
    result: components.VoiceV1SourceIpMapping$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        headers: "Headers",
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateSourceIpMappingResponse$;
(function (CreateSourceIpMappingResponse$) {
    /** @deprecated use `CreateSourceIpMappingResponse$inboundSchema` instead. */
    CreateSourceIpMappingResponse$.inboundSchema = CreateSourceIpMappingResponse$inboundSchema;
    /** @deprecated use `CreateSourceIpMappingResponse$outboundSchema` instead. */
    CreateSourceIpMappingResponse$.outboundSchema = CreateSourceIpMappingResponse$outboundSchema;
})(CreateSourceIpMappingResponse$ || (CreateSourceIpMappingResponse$ = {}));
export function createSourceIpMappingResponseToJSON(createSourceIpMappingResponse) {
    return JSON.stringify(CreateSourceIpMappingResponse$outboundSchema.parse(createSourceIpMappingResponse));
}
export function createSourceIpMappingResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateSourceIpMappingResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateSourceIpMappingResponse' from JSON`);
}
//# sourceMappingURL=createsourceipmapping.js.map