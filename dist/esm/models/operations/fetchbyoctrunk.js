/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
export const FetchByocTrunkServerList = [
    "https://voice.twilio.com",
];
/** @internal */
export const FetchByocTrunkRequest$inboundSchema = z.object({
    Sid: z.string(),
}).transform((v) => {
    return remap$(v, {
        "Sid": "sid",
    });
});
/** @internal */
export const FetchByocTrunkRequest$outboundSchema = z.object({
    sid: z.string(),
}).transform((v) => {
    return remap$(v, {
        sid: "Sid",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FetchByocTrunkRequest$;
(function (FetchByocTrunkRequest$) {
    /** @deprecated use `FetchByocTrunkRequest$inboundSchema` instead. */
    FetchByocTrunkRequest$.inboundSchema = FetchByocTrunkRequest$inboundSchema;
    /** @deprecated use `FetchByocTrunkRequest$outboundSchema` instead. */
    FetchByocTrunkRequest$.outboundSchema = FetchByocTrunkRequest$outboundSchema;
})(FetchByocTrunkRequest$ || (FetchByocTrunkRequest$ = {}));
export function fetchByocTrunkRequestToJSON(fetchByocTrunkRequest) {
    return JSON.stringify(FetchByocTrunkRequest$outboundSchema.parse(fetchByocTrunkRequest));
}
export function fetchByocTrunkRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FetchByocTrunkRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FetchByocTrunkRequest' from JSON`);
}
/** @internal */
export const FetchByocTrunkResponse$inboundSchema = z.object({
    Headers: z.record(z.array(z.string())),
    Result: components.VoiceV1ByocTrunk$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "Headers": "headers",
        "Result": "result",
    });
});
/** @internal */
export const FetchByocTrunkResponse$outboundSchema = z.object({
    headers: z.record(z.array(z.string())),
    result: components.VoiceV1ByocTrunk$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        headers: "Headers",
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FetchByocTrunkResponse$;
(function (FetchByocTrunkResponse$) {
    /** @deprecated use `FetchByocTrunkResponse$inboundSchema` instead. */
    FetchByocTrunkResponse$.inboundSchema = FetchByocTrunkResponse$inboundSchema;
    /** @deprecated use `FetchByocTrunkResponse$outboundSchema` instead. */
    FetchByocTrunkResponse$.outboundSchema = FetchByocTrunkResponse$outboundSchema;
})(FetchByocTrunkResponse$ || (FetchByocTrunkResponse$ = {}));
export function fetchByocTrunkResponseToJSON(fetchByocTrunkResponse) {
    return JSON.stringify(FetchByocTrunkResponse$outboundSchema.parse(fetchByocTrunkResponse));
}
export function fetchByocTrunkResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FetchByocTrunkResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FetchByocTrunkResponse' from JSON`);
}
//# sourceMappingURL=fetchbyoctrunk.js.map