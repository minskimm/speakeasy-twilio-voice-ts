/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
export const ListSourceIpMappingServerList = [
    "https://voice.twilio.com",
];
/** @internal */
export const ListSourceIpMappingRequest$inboundSchema = z.object({
    PageSize: z.number().int().optional(),
    Page: z.number().int().optional(),
    PageToken: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "PageSize": "pageSize",
        "Page": "page",
        "PageToken": "pageToken",
    });
});
/** @internal */
export const ListSourceIpMappingRequest$outboundSchema = z.object({
    pageSize: z.number().int().optional(),
    page: z.number().int().optional(),
    pageToken: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        pageSize: "PageSize",
        page: "Page",
        pageToken: "PageToken",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListSourceIpMappingRequest$;
(function (ListSourceIpMappingRequest$) {
    /** @deprecated use `ListSourceIpMappingRequest$inboundSchema` instead. */
    ListSourceIpMappingRequest$.inboundSchema = ListSourceIpMappingRequest$inboundSchema;
    /** @deprecated use `ListSourceIpMappingRequest$outboundSchema` instead. */
    ListSourceIpMappingRequest$.outboundSchema = ListSourceIpMappingRequest$outboundSchema;
})(ListSourceIpMappingRequest$ || (ListSourceIpMappingRequest$ = {}));
export function listSourceIpMappingRequestToJSON(listSourceIpMappingRequest) {
    return JSON.stringify(ListSourceIpMappingRequest$outboundSchema.parse(listSourceIpMappingRequest));
}
export function listSourceIpMappingRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListSourceIpMappingRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListSourceIpMappingRequest' from JSON`);
}
/** @internal */
export const ListSourceIpMappingMeta$inboundSchema = z.object({
    first_page_url: z.string().optional(),
    key: z.string().optional(),
    next_page_url: z.nullable(z.string()).optional(),
    page: z.number().int().optional(),
    page_size: z.number().int().optional(),
    previous_page_url: z.nullable(z.string()).optional(),
    url: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "first_page_url": "firstPageUrl",
        "next_page_url": "nextPageUrl",
        "page_size": "pageSize",
        "previous_page_url": "previousPageUrl",
    });
});
/** @internal */
export const ListSourceIpMappingMeta$outboundSchema = z.object({
    firstPageUrl: z.string().optional(),
    key: z.string().optional(),
    nextPageUrl: z.nullable(z.string()).optional(),
    page: z.number().int().optional(),
    pageSize: z.number().int().optional(),
    previousPageUrl: z.nullable(z.string()).optional(),
    url: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        firstPageUrl: "first_page_url",
        nextPageUrl: "next_page_url",
        pageSize: "page_size",
        previousPageUrl: "previous_page_url",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListSourceIpMappingMeta$;
(function (ListSourceIpMappingMeta$) {
    /** @deprecated use `ListSourceIpMappingMeta$inboundSchema` instead. */
    ListSourceIpMappingMeta$.inboundSchema = ListSourceIpMappingMeta$inboundSchema;
    /** @deprecated use `ListSourceIpMappingMeta$outboundSchema` instead. */
    ListSourceIpMappingMeta$.outboundSchema = ListSourceIpMappingMeta$outboundSchema;
})(ListSourceIpMappingMeta$ || (ListSourceIpMappingMeta$ = {}));
export function listSourceIpMappingMetaToJSON(listSourceIpMappingMeta) {
    return JSON.stringify(ListSourceIpMappingMeta$outboundSchema.parse(listSourceIpMappingMeta));
}
export function listSourceIpMappingMetaFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListSourceIpMappingMeta$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListSourceIpMappingMeta' from JSON`);
}
/** @internal */
export const ListSourceIpMappingListSourceIpMappingResponse$inboundSchema = z.object({
    source_ip_mappings: z.array(components.VoiceV1SourceIpMapping$inboundSchema)
        .optional(),
    meta: z.lazy(() => ListSourceIpMappingMeta$inboundSchema).optional(),
}).transform((v) => {
    return remap$(v, {
        "source_ip_mappings": "sourceIpMappings",
    });
});
/** @internal */
export const ListSourceIpMappingListSourceIpMappingResponse$outboundSchema = z.object({
    sourceIpMappings: z.array(components.VoiceV1SourceIpMapping$outboundSchema)
        .optional(),
    meta: z.lazy(() => ListSourceIpMappingMeta$outboundSchema).optional(),
}).transform((v) => {
    return remap$(v, {
        sourceIpMappings: "source_ip_mappings",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListSourceIpMappingListSourceIpMappingResponse$;
(function (ListSourceIpMappingListSourceIpMappingResponse$) {
    /** @deprecated use `ListSourceIpMappingListSourceIpMappingResponse$inboundSchema` instead. */
    ListSourceIpMappingListSourceIpMappingResponse$.inboundSchema = ListSourceIpMappingListSourceIpMappingResponse$inboundSchema;
    /** @deprecated use `ListSourceIpMappingListSourceIpMappingResponse$outboundSchema` instead. */
    ListSourceIpMappingListSourceIpMappingResponse$.outboundSchema = ListSourceIpMappingListSourceIpMappingResponse$outboundSchema;
})(ListSourceIpMappingListSourceIpMappingResponse$ || (ListSourceIpMappingListSourceIpMappingResponse$ = {}));
export function listSourceIpMappingListSourceIpMappingResponseToJSON(listSourceIpMappingListSourceIpMappingResponse) {
    return JSON.stringify(ListSourceIpMappingListSourceIpMappingResponse$outboundSchema.parse(listSourceIpMappingListSourceIpMappingResponse));
}
export function listSourceIpMappingListSourceIpMappingResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListSourceIpMappingListSourceIpMappingResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListSourceIpMappingListSourceIpMappingResponse' from JSON`);
}
/** @internal */
export const ListSourceIpMappingResponse$inboundSchema = z.object({
    Headers: z.record(z.array(z.string())),
    Result: z.lazy(() => ListSourceIpMappingListSourceIpMappingResponse$inboundSchema),
}).transform((v) => {
    return remap$(v, {
        "Headers": "headers",
        "Result": "result",
    });
});
/** @internal */
export const ListSourceIpMappingResponse$outboundSchema = z.object({
    headers: z.record(z.array(z.string())),
    result: z.lazy(() => ListSourceIpMappingListSourceIpMappingResponse$outboundSchema),
}).transform((v) => {
    return remap$(v, {
        headers: "Headers",
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListSourceIpMappingResponse$;
(function (ListSourceIpMappingResponse$) {
    /** @deprecated use `ListSourceIpMappingResponse$inboundSchema` instead. */
    ListSourceIpMappingResponse$.inboundSchema = ListSourceIpMappingResponse$inboundSchema;
    /** @deprecated use `ListSourceIpMappingResponse$outboundSchema` instead. */
    ListSourceIpMappingResponse$.outboundSchema = ListSourceIpMappingResponse$outboundSchema;
})(ListSourceIpMappingResponse$ || (ListSourceIpMappingResponse$ = {}));
export function listSourceIpMappingResponseToJSON(listSourceIpMappingResponse) {
    return JSON.stringify(ListSourceIpMappingResponse$outboundSchema.parse(listSourceIpMappingResponse));
}
export function listSourceIpMappingResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListSourceIpMappingResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListSourceIpMappingResponse' from JSON`);
}
//# sourceMappingURL=listsourceipmapping.js.map