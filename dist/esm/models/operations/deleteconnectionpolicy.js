/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
export const DeleteConnectionPolicyServerList = [
    "https://voice.twilio.com",
];
/** @internal */
export const DeleteConnectionPolicyRequest$inboundSchema = z.object({
    Sid: z.string(),
}).transform((v) => {
    return remap$(v, {
        "Sid": "sid",
    });
});
/** @internal */
export const DeleteConnectionPolicyRequest$outboundSchema = z.object({
    sid: z.string(),
}).transform((v) => {
    return remap$(v, {
        sid: "Sid",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteConnectionPolicyRequest$;
(function (DeleteConnectionPolicyRequest$) {
    /** @deprecated use `DeleteConnectionPolicyRequest$inboundSchema` instead. */
    DeleteConnectionPolicyRequest$.inboundSchema = DeleteConnectionPolicyRequest$inboundSchema;
    /** @deprecated use `DeleteConnectionPolicyRequest$outboundSchema` instead. */
    DeleteConnectionPolicyRequest$.outboundSchema = DeleteConnectionPolicyRequest$outboundSchema;
})(DeleteConnectionPolicyRequest$ || (DeleteConnectionPolicyRequest$ = {}));
export function deleteConnectionPolicyRequestToJSON(deleteConnectionPolicyRequest) {
    return JSON.stringify(DeleteConnectionPolicyRequest$outboundSchema.parse(deleteConnectionPolicyRequest));
}
export function deleteConnectionPolicyRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteConnectionPolicyRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteConnectionPolicyRequest' from JSON`);
}
//# sourceMappingURL=deleteconnectionpolicy.js.map