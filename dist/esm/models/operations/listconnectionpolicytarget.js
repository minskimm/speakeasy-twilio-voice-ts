/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
export const ListConnectionPolicyTargetServerList = [
    "https://voice.twilio.com",
];
/** @internal */
export const ListConnectionPolicyTargetRequest$inboundSchema = z.object({
    ConnectionPolicySid: z.string(),
    PageSize: z.number().int().optional(),
    Page: z.number().int().optional(),
    PageToken: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "ConnectionPolicySid": "connectionPolicySid",
        "PageSize": "pageSize",
        "Page": "page",
        "PageToken": "pageToken",
    });
});
/** @internal */
export const ListConnectionPolicyTargetRequest$outboundSchema = z.object({
    connectionPolicySid: z.string(),
    pageSize: z.number().int().optional(),
    page: z.number().int().optional(),
    pageToken: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        connectionPolicySid: "ConnectionPolicySid",
        pageSize: "PageSize",
        page: "Page",
        pageToken: "PageToken",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListConnectionPolicyTargetRequest$;
(function (ListConnectionPolicyTargetRequest$) {
    /** @deprecated use `ListConnectionPolicyTargetRequest$inboundSchema` instead. */
    ListConnectionPolicyTargetRequest$.inboundSchema = ListConnectionPolicyTargetRequest$inboundSchema;
    /** @deprecated use `ListConnectionPolicyTargetRequest$outboundSchema` instead. */
    ListConnectionPolicyTargetRequest$.outboundSchema = ListConnectionPolicyTargetRequest$outboundSchema;
})(ListConnectionPolicyTargetRequest$ || (ListConnectionPolicyTargetRequest$ = {}));
export function listConnectionPolicyTargetRequestToJSON(listConnectionPolicyTargetRequest) {
    return JSON.stringify(ListConnectionPolicyTargetRequest$outboundSchema.parse(listConnectionPolicyTargetRequest));
}
export function listConnectionPolicyTargetRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListConnectionPolicyTargetRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListConnectionPolicyTargetRequest' from JSON`);
}
/** @internal */
export const ListConnectionPolicyTargetMeta$inboundSchema = z.object({
    first_page_url: z.string().optional(),
    key: z.string().optional(),
    next_page_url: z.nullable(z.string()).optional(),
    page: z.number().int().optional(),
    page_size: z.number().int().optional(),
    previous_page_url: z.nullable(z.string()).optional(),
    url: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "first_page_url": "firstPageUrl",
        "next_page_url": "nextPageUrl",
        "page_size": "pageSize",
        "previous_page_url": "previousPageUrl",
    });
});
/** @internal */
export const ListConnectionPolicyTargetMeta$outboundSchema = z.object({
    firstPageUrl: z.string().optional(),
    key: z.string().optional(),
    nextPageUrl: z.nullable(z.string()).optional(),
    page: z.number().int().optional(),
    pageSize: z.number().int().optional(),
    previousPageUrl: z.nullable(z.string()).optional(),
    url: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        firstPageUrl: "first_page_url",
        nextPageUrl: "next_page_url",
        pageSize: "page_size",
        previousPageUrl: "previous_page_url",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListConnectionPolicyTargetMeta$;
(function (ListConnectionPolicyTargetMeta$) {
    /** @deprecated use `ListConnectionPolicyTargetMeta$inboundSchema` instead. */
    ListConnectionPolicyTargetMeta$.inboundSchema = ListConnectionPolicyTargetMeta$inboundSchema;
    /** @deprecated use `ListConnectionPolicyTargetMeta$outboundSchema` instead. */
    ListConnectionPolicyTargetMeta$.outboundSchema = ListConnectionPolicyTargetMeta$outboundSchema;
})(ListConnectionPolicyTargetMeta$ || (ListConnectionPolicyTargetMeta$ = {}));
export function listConnectionPolicyTargetMetaToJSON(listConnectionPolicyTargetMeta) {
    return JSON.stringify(ListConnectionPolicyTargetMeta$outboundSchema.parse(listConnectionPolicyTargetMeta));
}
export function listConnectionPolicyTargetMetaFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListConnectionPolicyTargetMeta$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListConnectionPolicyTargetMeta' from JSON`);
}
/** @internal */
export const ListConnectionPolicyTargetListConnectionPolicyTargetResponse$inboundSchema = z.object({
    targets: z.array(components.VoiceV1ConnectionPolicyConnectionPolicyTarget$inboundSchema).optional(),
    meta: z.lazy(() => ListConnectionPolicyTargetMeta$inboundSchema).optional(),
});
/** @internal */
export const ListConnectionPolicyTargetListConnectionPolicyTargetResponse$outboundSchema = z.object({
    targets: z.array(components.VoiceV1ConnectionPolicyConnectionPolicyTarget$outboundSchema).optional(),
    meta: z.lazy(() => ListConnectionPolicyTargetMeta$outboundSchema)
        .optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListConnectionPolicyTargetListConnectionPolicyTargetResponse$;
(function (ListConnectionPolicyTargetListConnectionPolicyTargetResponse$) {
    /** @deprecated use `ListConnectionPolicyTargetListConnectionPolicyTargetResponse$inboundSchema` instead. */
    ListConnectionPolicyTargetListConnectionPolicyTargetResponse$.inboundSchema = ListConnectionPolicyTargetListConnectionPolicyTargetResponse$inboundSchema;
    /** @deprecated use `ListConnectionPolicyTargetListConnectionPolicyTargetResponse$outboundSchema` instead. */
    ListConnectionPolicyTargetListConnectionPolicyTargetResponse$.outboundSchema = ListConnectionPolicyTargetListConnectionPolicyTargetResponse$outboundSchema;
})(ListConnectionPolicyTargetListConnectionPolicyTargetResponse$ || (ListConnectionPolicyTargetListConnectionPolicyTargetResponse$ = {}));
export function listConnectionPolicyTargetListConnectionPolicyTargetResponseToJSON(listConnectionPolicyTargetListConnectionPolicyTargetResponse) {
    return JSON.stringify(ListConnectionPolicyTargetListConnectionPolicyTargetResponse$outboundSchema
        .parse(listConnectionPolicyTargetListConnectionPolicyTargetResponse));
}
export function listConnectionPolicyTargetListConnectionPolicyTargetResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListConnectionPolicyTargetListConnectionPolicyTargetResponse$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'ListConnectionPolicyTargetListConnectionPolicyTargetResponse' from JSON`);
}
/** @internal */
export const ListConnectionPolicyTargetResponse$inboundSchema = z.object({
    Headers: z.record(z.array(z.string())),
    Result: z.lazy(() => ListConnectionPolicyTargetListConnectionPolicyTargetResponse$inboundSchema),
}).transform((v) => {
    return remap$(v, {
        "Headers": "headers",
        "Result": "result",
    });
});
/** @internal */
export const ListConnectionPolicyTargetResponse$outboundSchema = z.object({
    headers: z.record(z.array(z.string())),
    result: z.lazy(() => ListConnectionPolicyTargetListConnectionPolicyTargetResponse$outboundSchema),
}).transform((v) => {
    return remap$(v, {
        headers: "Headers",
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListConnectionPolicyTargetResponse$;
(function (ListConnectionPolicyTargetResponse$) {
    /** @deprecated use `ListConnectionPolicyTargetResponse$inboundSchema` instead. */
    ListConnectionPolicyTargetResponse$.inboundSchema = ListConnectionPolicyTargetResponse$inboundSchema;
    /** @deprecated use `ListConnectionPolicyTargetResponse$outboundSchema` instead. */
    ListConnectionPolicyTargetResponse$.outboundSchema = ListConnectionPolicyTargetResponse$outboundSchema;
})(ListConnectionPolicyTargetResponse$ || (ListConnectionPolicyTargetResponse$ = {}));
export function listConnectionPolicyTargetResponseToJSON(listConnectionPolicyTargetResponse) {
    return JSON.stringify(ListConnectionPolicyTargetResponse$outboundSchema.parse(listConnectionPolicyTargetResponse));
}
export function listConnectionPolicyTargetResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListConnectionPolicyTargetResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListConnectionPolicyTargetResponse' from JSON`);
}
//# sourceMappingURL=listconnectionpolicytarget.js.map