/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
export const FetchDialingPermissionsCountryServerList = [
    "https://voice.twilio.com",
];
/** @internal */
export const FetchDialingPermissionsCountryRequest$inboundSchema = z.object({
    IsoCode: z.string(),
}).transform((v) => {
    return remap$(v, {
        "IsoCode": "isoCode",
    });
});
/** @internal */
export const FetchDialingPermissionsCountryRequest$outboundSchema = z.object({
    isoCode: z.string(),
}).transform((v) => {
    return remap$(v, {
        isoCode: "IsoCode",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FetchDialingPermissionsCountryRequest$;
(function (FetchDialingPermissionsCountryRequest$) {
    /** @deprecated use `FetchDialingPermissionsCountryRequest$inboundSchema` instead. */
    FetchDialingPermissionsCountryRequest$.inboundSchema = FetchDialingPermissionsCountryRequest$inboundSchema;
    /** @deprecated use `FetchDialingPermissionsCountryRequest$outboundSchema` instead. */
    FetchDialingPermissionsCountryRequest$.outboundSchema = FetchDialingPermissionsCountryRequest$outboundSchema;
})(FetchDialingPermissionsCountryRequest$ || (FetchDialingPermissionsCountryRequest$ = {}));
export function fetchDialingPermissionsCountryRequestToJSON(fetchDialingPermissionsCountryRequest) {
    return JSON.stringify(FetchDialingPermissionsCountryRequest$outboundSchema.parse(fetchDialingPermissionsCountryRequest));
}
export function fetchDialingPermissionsCountryRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FetchDialingPermissionsCountryRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FetchDialingPermissionsCountryRequest' from JSON`);
}
/** @internal */
export const FetchDialingPermissionsCountryResponse$inboundSchema = z.object({
    Headers: z.record(z.array(z.string())),
    Result: components
        .VoiceV1DialingPermissionsDialingPermissionsCountryInstance$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "Headers": "headers",
        "Result": "result",
    });
});
/** @internal */
export const FetchDialingPermissionsCountryResponse$outboundSchema = z.object({
    headers: z.record(z.array(z.string())),
    result: components
        .VoiceV1DialingPermissionsDialingPermissionsCountryInstance$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        headers: "Headers",
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FetchDialingPermissionsCountryResponse$;
(function (FetchDialingPermissionsCountryResponse$) {
    /** @deprecated use `FetchDialingPermissionsCountryResponse$inboundSchema` instead. */
    FetchDialingPermissionsCountryResponse$.inboundSchema = FetchDialingPermissionsCountryResponse$inboundSchema;
    /** @deprecated use `FetchDialingPermissionsCountryResponse$outboundSchema` instead. */
    FetchDialingPermissionsCountryResponse$.outboundSchema = FetchDialingPermissionsCountryResponse$outboundSchema;
})(FetchDialingPermissionsCountryResponse$ || (FetchDialingPermissionsCountryResponse$ = {}));
export function fetchDialingPermissionsCountryResponseToJSON(fetchDialingPermissionsCountryResponse) {
    return JSON.stringify(FetchDialingPermissionsCountryResponse$outboundSchema.parse(fetchDialingPermissionsCountryResponse));
}
export function fetchDialingPermissionsCountryResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FetchDialingPermissionsCountryResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FetchDialingPermissionsCountryResponse' from JSON`);
}
//# sourceMappingURL=fetchdialingpermissionscountry.js.map